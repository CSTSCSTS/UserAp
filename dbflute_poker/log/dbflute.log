2020-05-07 11:57:43,287 [main] INFO  (DfReplaceSchemaTask#begin():94) - +------------------------------------------+
2020-05-07 11:57:43,292 [main] INFO  (DfReplaceSchemaTask#begin():95) - |                                          |
2020-05-07 11:57:43,293 [main] INFO  (DfReplaceSchemaTask#begin():96) - |              ReplaceSchema               |
2020-05-07 11:57:43,308 [main] INFO  (DfReplaceSchemaTask#begin():104) - |                                          |
2020-05-07 11:57:43,309 [main] INFO  (DfReplaceSchemaTask#begin():105) - +------------------------------------------+
2020-05-07 11:57:43,314 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():423) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2020-05-07 11:57:44,689 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-07 11:57:44,690 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-05-07 11:57:44,693 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-05-07 11:57:44,693 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-05-07 11:57:44,705 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-07 11:57:45,100 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = H2 1.4.199 (2019-03-13)
2020-05-07 11:57:45,101 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = H2 JDBC Driver 1.4.199 (2019-03-13) for JDBC 4.1
2020-05-07 11:57:45,121 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():253) - 
2020-05-07 11:57:45,121 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():254) - * * * * * * * * * * *
2020-05-07 11:57:45,122 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():255) - *                   *
2020-05-07 11:57:45,127 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():256) - * Initialize Schema *
2020-05-07 11:57:45,127 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():257) - *                   *
2020-05-07 11:57:45,128 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():258) - * * * * * * * * * * *
2020-05-07 11:57:45,142 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-05-07 11:57:45,144 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {POKER.PUBLIC as main}
2020-05-07 11:57:45,144 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-05-07 11:57:45,202 [main] INFO  (DfCreateSchemaProcess#createSchema():293) - 
2020-05-07 11:57:45,203 [main] INFO  (DfCreateSchemaProcess#createSchema():294) - * * * * * * * * *
2020-05-07 11:57:45,203 [main] INFO  (DfCreateSchemaProcess#createSchema():295) - *               *
2020-05-07 11:57:45,203 [main] INFO  (DfCreateSchemaProcess#createSchema():296) - * Create Schema *
2020-05-07 11:57:45,204 [main] INFO  (DfCreateSchemaProcess#createSchema():297) - *               *
2020-05-07 11:57:45,204 [main] INFO  (DfCreateSchemaProcess#createSchema():298) - * * * * * * * * *
2020-05-07 11:57:45,210 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema.sql
2020-05-07 11:57:45,217 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- ポーカーユーザー情報
CREATE SEQUENCE "POKER_USER_ID_SEQ1"
2020-05-07 11:57:45,224 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table POKER_USER_INFO (
  USER_ID INTEGER not null default nextval('POKER_USER_ID_SEQ1')
  , USER_NAME VARCHAR(255) not null
  , PASSWORD VARCHAR(255) not null
  , LOGIN_DATE TIMESTAMP not null default now()
  , constraint POKER_USER_INFO_PKC primary key (USER_ID)
)
2020-05-07 11:57:45,239 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table OAUTH_POKER_USER_INFO (
  USER_ID INTEGER not null default nextval('POKER_USER_ID_SEQ1')
  , USER_NAME VARCHAR(255) not null
  , LOGIN_DATE TIMESTAMP not null default now()
  , constraint OAUTH_POKER_USER_INFO_PKC primary key (USER_ID)
)
2020-05-07 11:57:45,251 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- 所持金
 create table POSSESSION_MONEY (
  USER_ID INTEGER not null
  , POSSESSION_MONEY DECIMAL not null
  , UPDATE_DATE TIMESTAMP not null default now()
  , constraint POSSESSION_MONEY_PKC primary key (USER_ID)
)
2020-05-07 11:57:45,261 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table poker_user_info add constraint POKER_USER_INFO_UNQ1
  unique (USER_NAME)
2020-05-07 11:57:45,268 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on table POSSESSION_MONEY is '所持金'
2020-05-07 11:57:45,269 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on column POSSESSION_MONEY.USER_ID is 'ユーザーID'
2020-05-07 11:57:45,270 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on column POSSESSION_MONEY.POSSESSION_MONEY is '所持金'
2020-05-07 11:57:45,271 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on column POSSESSION_MONEY.UPDATE_DATE is '更新日時'
2020-05-07 11:57:45,272 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on table POKER_USER_INFO is 'ポーカーユーザー情報'
2020-05-07 11:57:45,273 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on column POKER_USER_INFO.USER_ID is 'ユーザーID'
2020-05-07 11:57:45,274 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on column POKER_USER_INFO.USER_NAME is 'ユーザー名'
2020-05-07 11:57:45,278 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on column POKER_USER_INFO.PASSWORD is 'パスワード'
2020-05-07 11:57:45,279 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on column POKER_USER_INFO.LOGIN_DATE is 'ログイン日時'
2020-05-07 11:57:45,280 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=14 failure=0
2020-05-07 11:57:45,280 [main] INFO  (DfSqlFileFireMan#fire():93) - Create Schema: success=14, failure=0 (in 1 files)
2020-05-07 11:57:45,324 [main] INFO  (DfLoadDataProcess#execute():130) - 
2020-05-07 11:57:45,325 [main] INFO  (DfLoadDataProcess#execute():131) - * * * * * * * * * * *
2020-05-07 11:57:45,326 [main] INFO  (DfLoadDataProcess#execute():132) - *                   *
2020-05-07 11:57:45,327 [main] INFO  (DfLoadDataProcess#execute():133) - * Load Data         *
2020-05-07 11:57:45,328 [main] INFO  (DfLoadDataProcess#execute():134) - *                   *
2020-05-07 11:57:45,328 [main] INFO  (DfLoadDataProcess#execute():135) - * * * * * * * * * * *
2020-05-07 11:57:45,360 [main] INFO  (DfTakeFinallyProcess#takeFinally():244) - 
2020-05-07 11:57:45,360 [main] INFO  (DfTakeFinallyProcess#takeFinally():245) - * * * * * * * **
2020-05-07 11:57:45,361 [main] INFO  (DfTakeFinallyProcess#takeFinally():246) - *              *
2020-05-07 11:57:45,362 [main] INFO  (DfTakeFinallyProcess#takeFinally():247) - * Take Finally *
2020-05-07 11:57:45,362 [main] INFO  (DfTakeFinallyProcess#takeFinally():248) - *              *
2020-05-07 11:57:45,363 [main] INFO  (DfTakeFinallyProcess#takeFinally():249) - * * * * * * * **
2020-05-07 11:57:45,373 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: take-finally.sql
2020-05-07 11:57:45,376 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2020-05-07 11:57:45,379 [main] INFO  (DfSqlFileFireMan#fire():93) - Take Finally: success=0, failure=0 (in 1 files)
2020-05-07 11:57:45,382 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-07 11:57:45,401 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s127ms

  DBFLUTE_CLIENT: {poker}
    database  = h2 (H2 1.4.199 (2019-03-13))
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 Create Schema: success=14, failure=0 (in 1 files) - 00m00s165ms
  (Initialize Schema) - 00m00s080ms
  (Create Schema) - 00m00s075ms
  o replace-schema.sql

 Load Data: *empty loading - 00m00s027ms
  - (no data file)

 Take Finally: success=0, failure=0 (in 1 files) - 00m00s022ms
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2020-05-07 11:58:14,529 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-05-07 11:58:14,536 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-05-07 11:58:14,536 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-05-07 11:58:14,537 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-05-07 11:58:14,537 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-05-07 11:58:14,575 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-07 11:58:14,576 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-05-07 11:58:14,576 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-05-07 11:58:14,576 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-05-07 11:58:14,643 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-05-07 11:58:14,643 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-05-07 11:58:14,644 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-05-07 11:58:14,663 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1535) -  -> no previous (first time)
2020-05-07 11:58:14,679 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-05-07 11:58:14,690 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-07 11:58:15,442 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = H2 1.4.199 (2019-03-13)
2020-05-07 11:58:15,443 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = H2 JDBC Driver 1.4.199 (2019-03-13) for JDBC 4.1
2020-05-07 11:58:15,445 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-05-07 11:58:15,453 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-05-07 11:58:15,454 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {POKER.PUBLIC as main}
2020-05-07 11:58:15,455 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-05-07 11:58:15,530 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-05-07 11:58:15,531 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-05-07 11:58:15,532 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-05-07 11:58:15,533 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ POKER.PUBLIC.OAUTH_POKER_USER_INFO(TABLE)
2020-05-07 11:58:15,688 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ POKER.PUBLIC.POKER_USER_INFO(TABLE) // ポーカーユーザー情報
2020-05-07 11:58:15,726 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ POKER.PUBLIC.POSSESSION_MONEY(TABLE) // 所持金
2020-05-07 11:58:15,749 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-05-07 11:58:15,751 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-05-07 11:58:15,755 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 3
2020-05-07 11:58:15,757 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-05-07 11:58:15,758 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-05-07 11:58:15,762 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-05-07 11:58:15,785 [main] INFO  (DfSequenceExtractorH2#doGetSequenceMap():52) - ...Loading sequence informations
2020-05-07 11:58:15,795 [main] INFO  (DfSequenceExtractorBase#selectStringList():75) - select * from INFORMATION_SCHEMA.SEQUENCES where SEQUENCE_SCHEMA in ('PUBLIC')
2020-05-07 11:58:15,805 [main] INFO  (DfSequenceExtractorH2#doGetSequenceMap():84) - 
[SEQUENCE]
 POKER.PUBLIC.POKER_USER_ID_SEQ1 = POKER.PUBLIC.POKER_USER_ID_SEQ1:{null to null, increment 1}
2020-05-07 11:58:15,810 [main] INFO  (DfSchemaXmlSerializer#processSequence():810) - ...Processing sequences: 1
2020-05-07 11:58:15,851 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-05-07 11:58:15,852 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-poker.xml
2020-05-07 11:58:15,854 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-05-07 11:58:15,881 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-05-07 11:58:15,917 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-07 11:58:16,014 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1555) -  -> different from previous (schema diff)
2020-05-07 11:58:16,017 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1557) - ...Serializing schema-diff:
2020-05-07 11:58:16,018 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1558) -   filePath = ./schema/project-history-poker.diffmap
2020-05-07 11:58:16,034 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-07 11:58:16,274 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s772ms

  DBFLUTE_CLIENT: {poker}
    database  = h2 (H2 1.4.199 (2019-03-13))
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-05-07 11:58:18,214 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-05-07 11:58:18,219 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-05-07 11:58:18,220 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-05-07 11:58:18,221 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-05-07 11:58:18,222 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-05-07 11:58:18,255 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-07 11:58:18,255 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-05-07 11:58:18,256 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-05-07 11:58:18,257 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-05-07 11:58:18,260 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-05-07 11:58:18,261 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-05-07 11:58:18,261 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-05-07 11:58:18,262 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-05-07 11:58:18,262 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-05-07 11:58:18,263 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-05-07 11:58:18,341 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-07 11:58:18,420 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-05-07 11:58:18,421 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-05-07 11:58:18,423 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-05-07 11:58:18,424 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-05-07 11:58:18,425 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-05-07 11:58:18,426 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-05-07 11:58:18,429 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-05-07 11:58:18,429 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-05-07 11:58:18,435 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-05-07 11:58:18,456 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=poker
2020-05-07 11:58:18,565 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-05-07 11:58:18,826 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-05-07 11:58:18,842 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-05-07 11:58:18,883 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=1
2020-05-07 11:58:18,971 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-05-07 11:58:18,973 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-05-07 11:58:18,996 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-05-07 11:58:19,066 [main] WARN  (DfBehaviorQueryPathSetupper#findBsBhvDirOrWarining():358) - *Not found the base behavior for behavior query path: ../src/main/java/com/example/demo/dbflute/bsbhv/
2020-05-07 11:58:19,247 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-07 11:58:19,249 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [UserAp] by http://localhost:8386/
2020-05-07 11:58:19,332 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-07 11:58:19,339 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s144ms

  DBFLUTE_CLIENT: {poker}
    database  = h2
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-05-07 11:58:24,476 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-05-07 11:58:24,480 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-05-07 11:58:24,480 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-05-07 11:58:24,481 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-05-07 11:58:24,481 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-05-07 11:58:24,523 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-07 11:58:24,523 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-05-07 11:58:24,524 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-05-07 11:58:24,524 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-05-07 11:58:24,556 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-05-07 11:58:24,557 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-05-07 11:58:24,636 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-07 11:58:24,706 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-05-07 11:58:24,990 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-05-07 11:58:24,996 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-05-07 11:58:24,997 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-05-07 11:58:24,999 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-05-07 11:58:25,001 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-05-07 11:58:25,002 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-05-07 11:58:25,006 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-05-07 11:58:25,008 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-05-07 11:58:25,009 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-05-07 11:58:25,011 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-05-07 11:58:25,026 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=poker
2020-05-07 11:58:25,049 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-05-07 11:58:25,050 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-05-07 11:58:25,051 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-05-07 11:58:25,057 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-05-07 11:58:25,057 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-05-07 11:58:25,058 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-05-07 11:58:25,059 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-05-07 11:58:25,060 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-05-07 11:58:25,061 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-05-07 11:58:25,064 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-05-07 11:58:25,099 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-05-07 11:58:25,107 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-05-07 11:58:25,132 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-05-07 11:58:25,162 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-05-07 11:58:25,175 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-05-07 11:58:25,199 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-05-07 11:58:25,207 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-05-07 11:58:25,216 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-05-07 11:58:25,227 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-05-07 11:58:25,240 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-05-07 11:58:25,249 [main] INFO  (Database#info():2846) - }
2020-05-07 11:58:25,249 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-05-07 11:58:25,250 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-05-07 11:58:25,277 [main] INFO  (Database#info():2846) - }
2020-05-07 11:58:25,294 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-05-07 11:58:25,330 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-05-07 11:58:25,331 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-05-07 11:58:25,332 [main] INFO  (Database#info():2846) -     parse('OAUTH_POKER_USER_INFO');
2020-05-07 11:58:25,673 [main] INFO  (Database#info():2846) -     parse('POKER_USER_INFO');
2020-05-07 11:58:25,951 [main] INFO  (Database#info():2846) -     parse('POSSESSION_MONEY');
2020-05-07 11:58:26,168 [main] INFO  (Database#info():2846) - }
2020-05-07 11:58:26,169 [main] INFO  (Database#info():2846) -  
2020-05-07 11:58:26,364 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-07 11:58:26,365 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [UserAp] by http://localhost:8386/
2020-05-07 11:58:26,381 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-07 11:58:26,395 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s929ms

  DBFLUTE_CLIENT: {poker}
    database  = h2
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-05-07 11:58:28,783 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-05-07 11:58:28,789 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-05-07 11:58:28,789 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-05-07 11:58:28,790 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-05-07 11:58:28,791 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-05-07 11:58:28,840 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-07 11:58:28,841 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-05-07 11:58:28,841 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-05-07 11:58:28,842 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-05-07 11:58:28,928 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: PokerUserInfoBhv_select_money_ranking.sql
2020-05-07 11:58:28,935 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-07 11:58:29,547 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = H2 1.4.199 (2019-03-13)
2020-05-07 11:58:29,548 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = H2 JDBC Driver 1.4.199 (2019-03-13) for JDBC 4.1
2020-05-07 11:58:29,600 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  所持金ランキング取得SQL

 [df:description]
  ポーカーユーザー情報と所持金テーブルをJOINして、
  所持金の多い順・更新日時が新しい順にソート

*/

-- #df:entity#
-- !df:pmb!
-- !!AutoDetect!!

select *
  from POKER_USER_INFO pui
  inner join POSSESSION_MONEY pm on pui.user_id = pm.user_id
 order by pm.possession_money desc, pm.update_date desc
2020-05-07 11:58:29,667 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-07 11:58:29,668 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=0 (in 1 files)
2020-05-07 11:58:29,669 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-07 11:58:29,892 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s130ms

  DBFLUTE_CLIENT: {poker}
    database  = h2 (H2 1.4.199 (2019-03-13))
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o PokerUserInfoBhv_select_money_ranking.sql

   o: OK (1)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-05-07 11:58:31,827 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-05-07 11:58:31,830 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-05-07 11:58:31,831 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-05-07 11:58:31,831 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-05-07 11:58:31,832 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-05-07 11:58:31,863 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-07 11:58:31,864 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-05-07 11:58:31,864 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-05-07 11:58:31,865 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-05-07 11:58:31,889 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-05-07 11:58:31,890 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-05-07 11:58:31,899 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-07 11:58:31,990 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: PokerUserInfoBhv_select_money_ranking.sql
2020-05-07 11:58:31,996 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-07 11:58:32,376 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = H2 1.4.199 (2019-03-13)
2020-05-07 11:58:32,377 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = H2 JDBC Driver 1.4.199 (2019-03-13) for JDBC 4.1
2020-05-07 11:58:32,382 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  所持金ランキング取得SQL

 [df:description]
  ポーカーユーザー情報と所持金テーブルをJOINして、
  所持金の多い順・更新日時が新しい順にソート

*/

-- #df:entity#
-- !df:pmb!
-- !!AutoDetect!!

select *
  from POKER_USER_INFO pui
  inner join POSSESSION_MONEY pm on pui.user_id = pm.user_id
 order by pm.possession_money desc, pm.update_date desc
2020-05-07 11:58:32,461 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-05-07 11:58:32,462 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=0 (in 1 files)
2020-05-07 11:58:32,520 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-05-07 11:58:32,521 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-05-07 11:58:32,522 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-05-07 11:58:32,522 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-05-07 11:58:32,523 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-05-07 11:58:32,538 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():927) - 
Select
  USER_ID INTEGER(10) related to POSSESSION_MONEY.USER_ID
  USER_NAME VARCHAR(255) related to POKER_USER_INFO.USER_NAME
  PASSWORD VARCHAR(255) related to POKER_USER_INFO.PASSWORD
  LOGIN_DATE TIMESTAMP(26, 6) related to POKER_USER_INFO.LOGIN_DATE
  POSSESSION_MONEY DECIMAL(65535, 32767) related to POSSESSION_MONEY.POSSESSION_MONEY
  UPDATE_DATE TIMESTAMP(26, 6) related to POSSESSION_MONEY.UPDATE_DATE
2020-05-07 11:58:32,545 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-05-07 11:58:32,546 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-05-07 11:58:32,546 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-05-07 11:58:32,548 [main] INFO  (DfSql2EntityTask#showParameterBean():976) - 
SelectPmb (typed to list, entity)
2020-05-07 11:58:32,554 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-05-07 11:58:32,769 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=poker
2020-05-07 11:58:32,771 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=poker
2020-05-07 11:58:32,778 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-05-07 11:58:32,781 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-05-07 11:58:32,801 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-05-07 11:58:32,802 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-05-07 11:58:32,927 [main] INFO  (Database#info():2846) -     parse('Select')
2020-05-07 11:58:32,932 [main] INFO  (Database#info():2846) - }
2020-05-07 11:58:32,933 [main] INFO  (Database#info():2846) - public void parseParameterBean() {
2020-05-07 11:58:32,948 [main] INFO  (Database#info():2846) -     parse('SelectPmb');
2020-05-07 11:58:32,984 [main] INFO  (Database#info():2846) - }
2020-05-07 11:58:33,060 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 1

  PokerUserInfoBhv_select_money_ranking.sql
- - - - - - - - - -/
2020-05-07 11:58:33,079 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-07 11:58:33,081 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [UserAp] by http://localhost:8386/
2020-05-07 11:58:33,092 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-07 11:58:33,093 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-07 11:58:33,306 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s497ms

  DBFLUTE_CLIENT: {poker}
    database  = h2 (H2 1.4.199 (2019-03-13))
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-05-07 13:40:05,947 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-05-07 13:40:05,954 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-05-07 13:40:05,955 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-05-07 13:40:05,956 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-05-07 13:40:05,956 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-05-07 13:40:05,996 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-07 13:40:05,997 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-05-07 13:40:05,998 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-05-07 13:40:05,999 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-05-07 13:40:06,075 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-05-07 13:40:06,076 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-05-07 13:40:06,077 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-05-07 13:40:06,100 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-07 13:40:06,241 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-05-07 13:40:06,250 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-07 13:40:07,035 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = H2 1.4.199 (2019-03-13)
2020-05-07 13:40:07,037 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = H2 JDBC Driver 1.4.199 (2019-03-13) for JDBC 4.1
2020-05-07 13:40:07,040 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-05-07 13:40:07,044 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-05-07 13:40:07,045 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {POKER.PUBLIC as main}
2020-05-07 13:40:07,046 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-05-07 13:40:07,145 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-05-07 13:40:07,146 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-05-07 13:40:07,147 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-05-07 13:40:07,148 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ POKER.PUBLIC.OAUTH_POKER_USER_INFO(TABLE)
2020-05-07 13:40:07,309 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ POKER.PUBLIC.POKER_USER_INFO(TABLE) // ポーカーユーザー情報
2020-05-07 13:40:07,344 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ POKER.PUBLIC.POSSESSION_MONEY(TABLE) // 所持金
2020-05-07 13:40:07,377 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-05-07 13:40:07,378 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-05-07 13:40:07,379 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 3
2020-05-07 13:40:07,380 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-05-07 13:40:07,381 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-05-07 13:40:07,385 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-05-07 13:40:07,395 [main] INFO  (DfSequenceExtractorH2#doGetSequenceMap():52) - ...Loading sequence informations
2020-05-07 13:40:07,402 [main] INFO  (DfSequenceExtractorBase#selectStringList():75) - select * from INFORMATION_SCHEMA.SEQUENCES where SEQUENCE_SCHEMA in ('PUBLIC')
2020-05-07 13:40:07,418 [main] INFO  (DfSequenceExtractorH2#doGetSequenceMap():84) - 
[SEQUENCE]
 POKER.PUBLIC.POKER_USER_ID_SEQ1 = POKER.PUBLIC.POKER_USER_ID_SEQ1:{null to null, increment 1}
2020-05-07 13:40:07,423 [main] INFO  (DfSchemaXmlSerializer#processSequence():810) - ...Processing sequences: 1
2020-05-07 13:40:07,433 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-05-07 13:40:07,434 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-poker.xml
2020-05-07 13:40:07,435 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-05-07 13:40:07,468 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-05-07 13:40:07,485 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-07 13:40:07,640 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2020-05-07 13:40:07,641 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-07 13:40:07,864 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s938ms

  DBFLUTE_CLIENT: {poker}
    database  = h2 (H2 1.4.199 (2019-03-13))
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-05-07 13:40:09,841 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-05-07 13:40:09,845 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-05-07 13:40:09,846 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-05-07 13:40:09,846 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-05-07 13:40:09,847 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-05-07 13:40:09,878 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-07 13:40:09,879 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-05-07 13:40:09,879 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-05-07 13:40:09,880 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-05-07 13:40:09,883 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-05-07 13:40:09,884 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-05-07 13:40:09,884 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-05-07 13:40:09,885 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-05-07 13:40:09,886 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-05-07 13:40:09,886 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-05-07 13:40:09,958 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-07 13:40:10,032 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-05-07 13:40:10,033 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-05-07 13:40:10,034 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-05-07 13:40:10,037 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-05-07 13:40:10,037 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-05-07 13:40:10,039 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-05-07 13:40:10,041 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-05-07 13:40:10,042 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-05-07 13:40:10,048 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-05-07 13:40:10,069 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=poker
2020-05-07 13:40:10,171 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-05-07 13:40:10,360 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-05-07 13:40:10,369 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-05-07 13:40:10,409 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=1
2020-05-07 13:40:10,477 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-05-07 13:40:10,477 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-05-07 13:40:10,491 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-05-07 13:40:10,539 [main] WARN  (DfBehaviorQueryPathSetupper#findBsBhvDirOrWarining():358) - *Not found the base behavior for behavior query path: ../src/main/java/com/example/demo/dbflute/bsbhv/
2020-05-07 13:40:10,594 [main] INFO  (DfSequenceExtractorH2#doGetSequenceMap():52) - ...Loading sequence informations
2020-05-07 13:40:10,597 [main] INFO  (DfSequenceExtractorBase#selectStringList():75) - select * from INFORMATION_SCHEMA.SEQUENCES where SEQUENCE_SCHEMA in ('PUBLIC')
2020-05-07 13:40:10,601 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-07 13:40:11,020 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = H2 1.4.199 (2019-03-13)
2020-05-07 13:40:11,021 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = H2 JDBC Driver 1.4.199 (2019-03-13) for JDBC 4.1
2020-05-07 13:40:11,056 [main] INFO  (DfSequenceExtractorH2#doGetSequenceMap():84) - 
[SEQUENCE]
 POKER.PUBLIC.POKER_USER_ID_SEQ1 = POKER.PUBLIC.POKER_USER_ID_SEQ1:{null to null, increment 1}
2020-05-07 13:40:11,199 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-07 13:40:11,201 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [UserAp] by http://localhost:8386/
2020-05-07 13:40:11,297 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-07 13:40:11,298 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-07 13:40:11,516 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s692ms

  DBFLUTE_CLIENT: {poker}
    database  = h2 (H2 1.4.199 (2019-03-13))
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-05-07 13:40:16,240 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-05-07 13:40:16,243 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-05-07 13:40:16,244 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-05-07 13:40:16,244 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-05-07 13:40:16,245 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-05-07 13:40:16,277 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-07 13:40:16,277 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-05-07 13:40:16,278 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-05-07 13:40:16,279 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-05-07 13:40:16,314 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-05-07 13:40:16,315 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-05-07 13:40:16,380 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-07 13:40:16,434 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-05-07 13:40:16,681 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-05-07 13:40:16,690 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-05-07 13:40:16,691 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-05-07 13:40:16,699 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-05-07 13:40:16,702 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-05-07 13:40:16,703 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-05-07 13:40:16,705 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-05-07 13:40:16,708 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-05-07 13:40:16,709 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-05-07 13:40:16,711 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-05-07 13:40:16,725 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=poker
2020-05-07 13:40:16,738 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-05-07 13:40:16,739 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-05-07 13:40:16,740 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-05-07 13:40:16,743 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-05-07 13:40:16,743 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-05-07 13:40:16,744 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-05-07 13:40:16,745 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-05-07 13:40:16,746 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-05-07 13:40:16,750 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-05-07 13:40:16,750 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-05-07 13:40:16,808 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-05-07 13:40:16,815 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-05-07 13:40:16,830 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-05-07 13:40:16,850 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-05-07 13:40:16,862 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-05-07 13:40:16,887 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-05-07 13:40:16,897 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-05-07 13:40:16,911 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-05-07 13:40:16,924 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-05-07 13:40:16,954 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-05-07 13:40:16,964 [main] INFO  (Database#info():2846) - }
2020-05-07 13:40:16,965 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-05-07 13:40:16,966 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-05-07 13:40:16,999 [main] INFO  (Database#info():2846) - }
2020-05-07 13:40:17,021 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-05-07 13:40:17,062 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-05-07 13:40:17,063 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-05-07 13:40:17,065 [main] INFO  (Database#info():2846) -     parse('OAUTH_POKER_USER_INFO');
2020-05-07 13:40:17,217 [main] INFO  (DfSequenceExtractorH2#doGetSequenceMap():52) - ...Loading sequence informations
2020-05-07 13:40:17,247 [main] INFO  (DfSequenceExtractorBase#selectStringList():75) - select * from INFORMATION_SCHEMA.SEQUENCES where SEQUENCE_SCHEMA in ('PUBLIC')
2020-05-07 13:40:17,252 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-07 13:40:17,785 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = H2 1.4.199 (2019-03-13)
2020-05-07 13:40:17,786 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = H2 JDBC Driver 1.4.199 (2019-03-13) for JDBC 4.1
2020-05-07 13:40:17,832 [main] INFO  (DfSequenceExtractorH2#doGetSequenceMap():84) - 
[SEQUENCE]
 POKER.PUBLIC.POKER_USER_ID_SEQ1 = POKER.PUBLIC.POKER_USER_ID_SEQ1:{null to null, increment 1}
2020-05-07 13:40:17,988 [main] INFO  (Database#info():2846) -     parse('POKER_USER_INFO');
2020-05-07 13:40:18,165 [main] INFO  (Database#info():2846) -     parse('POSSESSION_MONEY');
2020-05-07 13:40:18,360 [main] INFO  (Database#info():2846) - }
2020-05-07 13:40:18,361 [main] INFO  (Database#info():2846) -  
2020-05-07 13:40:18,517 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-07 13:40:18,520 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [UserAp] by http://localhost:8386/
2020-05-07 13:40:18,533 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-07 13:40:18,534 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-07 13:40:18,758 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s530ms

  DBFLUTE_CLIENT: {poker}
    database  = h2 (H2 1.4.199 (2019-03-13))
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-05-07 13:40:21,253 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-05-07 13:40:21,259 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-05-07 13:40:21,259 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-05-07 13:40:21,260 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-05-07 13:40:21,261 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-05-07 13:40:21,329 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-07 13:40:21,330 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-05-07 13:40:21,331 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-05-07 13:40:21,332 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-05-07 13:40:21,448 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: PokerUserInfoBhv_select_money_ranking.sql
2020-05-07 13:40:21,458 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-07 13:40:22,221 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = H2 1.4.199 (2019-03-13)
2020-05-07 13:40:22,240 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = H2 JDBC Driver 1.4.199 (2019-03-13) for JDBC 4.1
2020-05-07 13:40:22,292 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  所持金ランキング取得SQL

 [df:description]
  ポーカーユーザー情報と所持金テーブルをJOINして、
  所持金の多い順・更新日時が新しい順にソート

*/

-- #df:entity#
-- !df:pmb!
-- !!AutoDetect!!

select *
  from POKER_USER_INFO pui
  inner join POSSESSION_MONEY pm on pui.user_id = pm.user_id
 order by pm.possession_money desc, pm.update_date desc
2020-05-07 13:40:22,349 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-05-07 13:40:22,350 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=0 (in 1 files)
2020-05-07 13:40:22,351 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-07 13:40:22,563 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s353ms

  DBFLUTE_CLIENT: {poker}
    database  = h2 (H2 1.4.199 (2019-03-13))
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o PokerUserInfoBhv_select_money_ranking.sql

   o: OK (1)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-05-07 13:40:24,113 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-05-07 13:40:24,117 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-05-07 13:40:24,117 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-05-07 13:40:24,118 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-05-07 13:40:24,118 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-05-07 13:40:24,145 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-05-07 13:40:24,146 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-05-07 13:40:24,146 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-05-07 13:40:24,147 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-05-07 13:40:24,166 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-05-07 13:40:24,166 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-05-07 13:40:24,173 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-05-07 13:40:24,243 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: PokerUserInfoBhv_select_money_ranking.sql
2020-05-07 13:40:24,248 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-05-07 13:40:24,599 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = H2 1.4.199 (2019-03-13)
2020-05-07 13:40:24,604 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = H2 JDBC Driver 1.4.199 (2019-03-13) for JDBC 4.1
2020-05-07 13:40:24,611 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  所持金ランキング取得SQL

 [df:description]
  ポーカーユーザー情報と所持金テーブルをJOINして、
  所持金の多い順・更新日時が新しい順にソート

*/

-- #df:entity#
-- !df:pmb!
-- !!AutoDetect!!

select *
  from POKER_USER_INFO pui
  inner join POSSESSION_MONEY pm on pui.user_id = pm.user_id
 order by pm.possession_money desc, pm.update_date desc
2020-05-07 13:40:24,694 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-05-07 13:40:24,695 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=0 (in 1 files)
2020-05-07 13:40:24,749 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-05-07 13:40:24,749 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-05-07 13:40:24,750 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-05-07 13:40:24,750 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-05-07 13:40:24,751 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-05-07 13:40:24,763 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():927) - 
Select
  USER_ID INTEGER(10) related to POSSESSION_MONEY.USER_ID
  USER_NAME VARCHAR(255) related to POKER_USER_INFO.USER_NAME
  PASSWORD VARCHAR(255) related to POKER_USER_INFO.PASSWORD
  LOGIN_DATE TIMESTAMP(26, 6) related to POKER_USER_INFO.LOGIN_DATE
  POSSESSION_MONEY DECIMAL(65535, 32767) related to POSSESSION_MONEY.POSSESSION_MONEY
  UPDATE_DATE TIMESTAMP(26, 6) related to POSSESSION_MONEY.UPDATE_DATE
2020-05-07 13:40:24,773 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-05-07 13:40:24,774 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-05-07 13:40:24,774 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-05-07 13:40:24,775 [main] INFO  (DfSql2EntityTask#showParameterBean():976) - 
SelectPmb (typed to list, entity)
2020-05-07 13:40:24,781 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-05-07 13:40:24,973 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=poker
2020-05-07 13:40:24,975 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=poker
2020-05-07 13:40:24,979 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-05-07 13:40:24,981 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-05-07 13:40:24,994 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-05-07 13:40:24,995 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-05-07 13:40:25,074 [main] INFO  (Database#info():2846) -     parse('Select')
2020-05-07 13:40:25,086 [main] INFO  (Database#info():2846) - }
2020-05-07 13:40:25,088 [main] INFO  (Database#info():2846) - public void parseParameterBean() {
2020-05-07 13:40:25,098 [main] INFO  (Database#info():2846) -     parse('SelectPmb');
2020-05-07 13:40:25,130 [main] INFO  (Database#info():2846) - }
2020-05-07 13:40:25,195 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 1

  PokerUserInfoBhv_select_money_ranking.sql
- - - - - - - - - -/
2020-05-07 13:40:25,208 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-05-07 13:40:25,209 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [UserAp] by http://localhost:8386/
2020-05-07 13:40:25,218 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-05-07 13:40:25,219 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-05-07 13:40:25,432 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s332ms

  DBFLUTE_CLIENT: {poker}
    database  = h2 (H2 1.4.199 (2019-03-13))
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-07-13 10:13:38,630 [main] INFO  (DfReplaceSchemaTask#begin():94) - +------------------------------------------+
2020-07-13 10:13:38,635 [main] INFO  (DfReplaceSchemaTask#begin():95) - |                                          |
2020-07-13 10:13:38,636 [main] INFO  (DfReplaceSchemaTask#begin():96) - |              ReplaceSchema               |
2020-07-13 10:13:38,649 [main] INFO  (DfReplaceSchemaTask#begin():104) - |                                          |
2020-07-13 10:13:38,649 [main] INFO  (DfReplaceSchemaTask#begin():105) - +------------------------------------------+
2020-07-13 10:13:38,657 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():423) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2020-07-13 10:13:48,105 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-07-13 10:13:48,106 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-07-13 10:13:48,107 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-07-13 10:13:48,108 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-07-13 10:13:48,119 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-07-13 10:13:48,551 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = H2 1.4.199 (2019-03-13)
2020-07-13 10:13:48,552 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = H2 JDBC Driver 1.4.199 (2019-03-13) for JDBC 4.1
2020-07-13 10:13:48,576 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():253) - 
2020-07-13 10:13:48,577 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():254) - * * * * * * * * * * *
2020-07-13 10:13:48,577 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():255) - *                   *
2020-07-13 10:13:48,578 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():256) - * Initialize Schema *
2020-07-13 10:13:48,579 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():257) - *                   *
2020-07-13 10:13:48,579 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():258) - * * * * * * * * * * *
2020-07-13 10:13:48,597 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-07-13 10:13:48,598 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {POKER.PUBLIC as main}
2020-07-13 10:13:48,598 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-07-13 10:13:48,643 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table OAUTH_POKER_USER_INFO
2020-07-13 10:13:48,644 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table POKER_USER_INFO
2020-07-13 10:13:48,646 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - truncate table POSSESSION_MONEY
2020-07-13 10:13:48,656 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table OAUTH_POKER_USER_INFO
2020-07-13 10:13:48,661 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table POKER_USER_INFO
2020-07-13 10:13:48,663 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop table POSSESSION_MONEY
2020-07-13 10:13:48,671 [main] INFO  (DfSchemaInitializerJdbc#logReplaceSql():614) - drop sequence POKER_USER_ID_SEQ1
2020-07-13 10:13:48,681 [main] INFO  (DfCreateSchemaProcess#createSchema():293) - 
2020-07-13 10:13:48,682 [main] INFO  (DfCreateSchemaProcess#createSchema():294) - * * * * * * * * *
2020-07-13 10:13:48,682 [main] INFO  (DfCreateSchemaProcess#createSchema():295) - *               *
2020-07-13 10:13:48,683 [main] INFO  (DfCreateSchemaProcess#createSchema():296) - * Create Schema *
2020-07-13 10:13:48,683 [main] INFO  (DfCreateSchemaProcess#createSchema():297) - *               *
2020-07-13 10:13:48,684 [main] INFO  (DfCreateSchemaProcess#createSchema():298) - * * * * * * * * *
2020-07-13 10:13:48,689 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema.sql
2020-07-13 10:13:48,695 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- ポーカーユーザー情報
CREATE SEQUENCE "POKER_USER_ID_SEQ1"
2020-07-13 10:13:48,701 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table POKER_USER_INFO (
  USER_ID INTEGER not null default nextval('POKER_USER_ID_SEQ1')
  , USER_NAME VARCHAR(255) not null
  , PASSWORD VARCHAR(255) not null
  , LOGIN_DATE TIMESTAMP not null default now()
  , constraint POKER_USER_INFO_PKC primary key (USER_ID)
)
2020-07-13 10:13:48,713 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table OAUTH_POKER_USER_INFO (
  USER_ID INTEGER not null default nextval('POKER_USER_ID_SEQ1')
  , USER_NAME VARCHAR(255) not null
  , LOGIN_DATE TIMESTAMP not null default now()
  , constraint OAUTH_POKER_USER_INFO_PKC primary key (USER_ID)
)
2020-07-13 10:13:48,720 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- 所持金
 create table POSSESSION_MONEY (
  USER_ID INTEGER not null
  , POSSESSION_MONEY DECIMAL not null
  , UPDATE_DATE TIMESTAMP not null default now()
  , constraint POSSESSION_MONEY_PKC primary key (USER_ID)
)
2020-07-13 10:13:48,727 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table poker_user_info add constraint POKER_USER_INFO_UNQ1
  unique (USER_NAME)
2020-07-13 10:13:48,730 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on table POSSESSION_MONEY is '所持金'
2020-07-13 10:13:48,731 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on column POSSESSION_MONEY.USER_ID is 'ユーザーID'
2020-07-13 10:13:48,732 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on column POSSESSION_MONEY.POSSESSION_MONEY is '所持金'
2020-07-13 10:13:48,733 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on column POSSESSION_MONEY.UPDATE_DATE is '更新日時'
2020-07-13 10:13:48,734 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on table POKER_USER_INFO is 'ポーカーユーザー情報'
2020-07-13 10:13:48,735 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on column POKER_USER_INFO.USER_ID is 'ユーザーID'
2020-07-13 10:13:48,737 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on column POKER_USER_INFO.USER_NAME is 'ユーザー名'
2020-07-13 10:13:48,738 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on column POKER_USER_INFO.PASSWORD is 'パスワード'
2020-07-13 10:13:48,740 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on column POKER_USER_INFO.LOGIN_DATE is 'ログイン日時'
2020-07-13 10:13:48,745 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=14 failure=0
2020-07-13 10:13:48,748 [main] INFO  (DfSqlFileFireMan#fire():93) - Create Schema: success=14, failure=0 (in 1 files)
2020-07-13 10:13:48,795 [main] INFO  (DfLoadDataProcess#execute():130) - 
2020-07-13 10:13:48,796 [main] INFO  (DfLoadDataProcess#execute():131) - * * * * * * * * * * *
2020-07-13 10:13:48,796 [main] INFO  (DfLoadDataProcess#execute():132) - *                   *
2020-07-13 10:13:48,797 [main] INFO  (DfLoadDataProcess#execute():133) - * Load Data         *
2020-07-13 10:13:48,797 [main] INFO  (DfLoadDataProcess#execute():134) - *                   *
2020-07-13 10:13:48,797 [main] INFO  (DfLoadDataProcess#execute():135) - * * * * * * * * * * *
2020-07-13 10:13:48,831 [main] INFO  (DfTakeFinallyProcess#takeFinally():244) - 
2020-07-13 10:13:48,832 [main] INFO  (DfTakeFinallyProcess#takeFinally():245) - * * * * * * * **
2020-07-13 10:13:48,832 [main] INFO  (DfTakeFinallyProcess#takeFinally():246) - *              *
2020-07-13 10:13:48,833 [main] INFO  (DfTakeFinallyProcess#takeFinally():247) - * Take Finally *
2020-07-13 10:13:48,833 [main] INFO  (DfTakeFinallyProcess#takeFinally():248) - *              *
2020-07-13 10:13:48,834 [main] INFO  (DfTakeFinallyProcess#takeFinally():249) - * * * * * * * **
2020-07-13 10:13:48,845 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: take-finally.sql
2020-07-13 10:13:48,847 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2020-07-13 10:13:48,848 [main] INFO  (DfSqlFileFireMan#fire():93) - Take Finally: success=0, failure=0 (in 1 files)
2020-07-13 10:13:48,851 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-07-13 10:13:49,060 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m10s457ms

  DBFLUTE_CLIENT: {poker}
    database  = h2 (H2 1.4.199 (2019-03-13))
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 Create Schema: success=14, failure=0 (in 1 files) - 00m00s180ms
  (Initialize Schema) - 00m00s103ms
  (Create Schema) - 00m00s064ms
  o replace-schema.sql

 Load Data: *empty loading - 00m00s030ms
  - (no data file)

 Take Finally: success=0, failure=0 (in 1 files) - 00m00s019ms
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2020-07-13 10:13:50,232 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-07-13 10:13:50,236 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-07-13 10:13:50,236 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-07-13 10:13:50,237 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-07-13 10:13:50,238 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-07-13 10:13:50,269 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-07-13 10:13:50,270 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-07-13 10:13:50,270 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-07-13 10:13:50,271 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-07-13 10:13:50,325 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-07-13 10:13:50,326 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-07-13 10:13:50,326 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-07-13 10:13:50,343 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-07-13 10:13:50,434 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-07-13 10:13:50,436 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-07-13 10:13:50,738 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = H2 1.4.199 (2019-03-13)
2020-07-13 10:13:50,739 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = H2 JDBC Driver 1.4.199 (2019-03-13) for JDBC 4.1
2020-07-13 10:13:50,741 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-07-13 10:13:50,743 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-07-13 10:13:50,744 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {POKER.PUBLIC as main}
2020-07-13 10:13:50,744 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-07-13 10:13:50,790 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-07-13 10:13:50,791 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-07-13 10:13:50,792 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-07-13 10:13:50,793 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ POKER.PUBLIC.OAUTH_POKER_USER_INFO(TABLE)
2020-07-13 10:13:50,849 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ POKER.PUBLIC.POKER_USER_INFO(TABLE) // ポーカーユーザー情報
2020-07-13 10:13:50,865 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ POKER.PUBLIC.POSSESSION_MONEY(TABLE) // 所持金
2020-07-13 10:13:50,879 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-07-13 10:13:50,880 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-07-13 10:13:50,880 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 3
2020-07-13 10:13:50,880 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-07-13 10:13:50,881 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-07-13 10:13:50,883 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-07-13 10:13:50,887 [main] INFO  (DfSequenceExtractorH2#doGetSequenceMap():52) - ...Loading sequence informations
2020-07-13 10:13:50,891 [main] INFO  (DfSequenceExtractorBase#selectStringList():75) - select * from INFORMATION_SCHEMA.SEQUENCES where SEQUENCE_SCHEMA in ('PUBLIC')
2020-07-13 10:13:50,896 [main] INFO  (DfSequenceExtractorH2#doGetSequenceMap():84) - 
[SEQUENCE]
 POKER.PUBLIC.POKER_USER_ID_SEQ1 = POKER.PUBLIC.POKER_USER_ID_SEQ1:{null to null, increment 1}
2020-07-13 10:13:50,901 [main] INFO  (DfSchemaXmlSerializer#processSequence():810) - ...Processing sequences: 1
2020-07-13 10:13:50,905 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-07-13 10:13:50,905 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-poker.xml
2020-07-13 10:13:50,906 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-07-13 10:13:50,919 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-07-13 10:13:50,921 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-07-13 10:13:50,984 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2020-07-13 10:13:50,984 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-07-13 10:13:51,198 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s977ms

  DBFLUTE_CLIENT: {poker}
    database  = h2 (H2 1.4.199 (2019-03-13))
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-07-13 10:13:52,345 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-07-13 10:13:52,349 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-07-13 10:13:52,349 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-07-13 10:13:52,349 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-07-13 10:13:52,350 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-07-13 10:13:52,380 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-07-13 10:13:52,381 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-07-13 10:13:52,381 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-07-13 10:13:52,382 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-07-13 10:13:52,385 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-07-13 10:13:52,385 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-07-13 10:13:52,386 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-07-13 10:13:52,386 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-07-13 10:13:52,386 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-07-13 10:13:52,387 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-07-13 10:13:52,445 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-07-13 10:13:52,506 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-07-13 10:13:52,507 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-07-13 10:13:52,509 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-07-13 10:13:52,510 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-07-13 10:13:52,511 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-07-13 10:13:52,512 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-07-13 10:13:52,514 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-07-13 10:13:52,515 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-07-13 10:13:52,521 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-07-13 10:13:52,539 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=poker
2020-07-13 10:13:52,616 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-07-13 10:13:52,771 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-07-13 10:13:52,780 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-07-13 10:13:52,803 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=1
2020-07-13 10:13:52,851 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-07-13 10:13:52,852 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-07-13 10:13:52,873 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-07-13 10:13:52,988 [main] INFO  (DfSequenceExtractorH2#doGetSequenceMap():52) - ...Loading sequence informations
2020-07-13 10:13:52,991 [main] INFO  (DfSequenceExtractorBase#selectStringList():75) - select * from INFORMATION_SCHEMA.SEQUENCES where SEQUENCE_SCHEMA in ('PUBLIC')
2020-07-13 10:13:52,993 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-07-13 10:13:53,297 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = H2 1.4.199 (2019-03-13)
2020-07-13 10:13:53,298 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = H2 JDBC Driver 1.4.199 (2019-03-13) for JDBC 4.1
2020-07-13 10:13:53,325 [main] INFO  (DfSequenceExtractorH2#doGetSequenceMap():84) - 
[SEQUENCE]
 POKER.PUBLIC.POKER_USER_ID_SEQ1 = POKER.PUBLIC.POKER_USER_ID_SEQ1:{null to null, increment 1}
2020-07-13 10:13:53,438 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-07-13 10:13:53,440 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [UserAp2] by http://localhost:8386/
2020-07-13 10:13:53,510 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-07-13 10:13:53,511 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-07-13 10:13:53,720 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s392ms

  DBFLUTE_CLIENT: {poker}
    database  = h2 (H2 1.4.199 (2019-03-13))
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-07-13 10:13:57,870 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-07-13 10:13:57,872 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-07-13 10:13:57,873 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-07-13 10:13:57,874 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-07-13 10:13:57,874 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-07-13 10:13:57,901 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-07-13 10:13:57,901 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-07-13 10:13:57,902 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-07-13 10:13:57,902 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-07-13 10:13:57,923 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-07-13 10:13:57,924 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-07-13 10:13:57,977 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-07-13 10:13:58,020 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-07-13 10:13:58,207 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-07-13 10:13:58,212 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-07-13 10:13:58,212 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-07-13 10:13:58,214 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-07-13 10:13:58,216 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-07-13 10:13:58,217 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-07-13 10:13:58,219 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-07-13 10:13:58,222 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-07-13 10:13:58,222 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-07-13 10:13:58,224 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-07-13 10:13:58,236 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=poker
2020-07-13 10:13:58,245 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-07-13 10:13:58,245 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-07-13 10:13:58,246 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-07-13 10:13:58,249 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-07-13 10:13:58,250 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-07-13 10:13:58,251 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-07-13 10:13:58,251 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-07-13 10:13:58,253 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-07-13 10:13:58,253 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-07-13 10:13:58,254 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-07-13 10:13:58,273 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-07-13 10:13:58,275 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-07-13 10:13:58,286 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-07-13 10:13:58,300 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-07-13 10:13:58,308 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-07-13 10:13:58,331 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-07-13 10:13:58,337 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-07-13 10:13:58,346 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-07-13 10:13:58,353 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-07-13 10:13:58,362 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-07-13 10:13:58,370 [main] INFO  (Database#info():2846) - }
2020-07-13 10:13:58,371 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-07-13 10:13:58,372 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-07-13 10:13:58,394 [main] INFO  (Database#info():2846) - }
2020-07-13 10:13:58,401 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-07-13 10:13:58,428 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-07-13 10:13:58,429 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-07-13 10:13:58,430 [main] INFO  (Database#info():2846) -     parse('OAUTH_POKER_USER_INFO');
2020-07-13 10:13:58,540 [main] INFO  (DfSequenceExtractorH2#doGetSequenceMap():52) - ...Loading sequence informations
2020-07-13 10:13:58,545 [main] INFO  (DfSequenceExtractorBase#selectStringList():75) - select * from INFORMATION_SCHEMA.SEQUENCES where SEQUENCE_SCHEMA in ('PUBLIC')
2020-07-13 10:13:58,550 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-07-13 10:13:58,934 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = H2 1.4.199 (2019-03-13)
2020-07-13 10:13:58,935 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = H2 JDBC Driver 1.4.199 (2019-03-13) for JDBC 4.1
2020-07-13 10:13:58,972 [main] INFO  (DfSequenceExtractorH2#doGetSequenceMap():84) - 
[SEQUENCE]
 POKER.PUBLIC.POKER_USER_ID_SEQ1 = POKER.PUBLIC.POKER_USER_ID_SEQ1:{null to null, increment 1}
2020-07-13 10:13:59,058 [main] INFO  (Database#info():2846) -     parse('POKER_USER_INFO');
2020-07-13 10:13:59,175 [main] INFO  (Database#info():2846) -     parse('POSSESSION_MONEY');
2020-07-13 10:13:59,290 [main] INFO  (Database#info():2846) - }
2020-07-13 10:13:59,291 [main] INFO  (Database#info():2846) -  
2020-07-13 10:13:59,372 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-07-13 10:13:59,374 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [UserAp2] by http://localhost:8386/
2020-07-13 10:13:59,387 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-07-13 10:13:59,388 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-07-13 10:13:59,601 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s745ms

  DBFLUTE_CLIENT: {poker}
    database  = h2 (H2 1.4.199 (2019-03-13))
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-07-13 10:14:01,192 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-07-13 10:14:01,196 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-07-13 10:14:01,196 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-07-13 10:14:01,197 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-07-13 10:14:01,197 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-07-13 10:14:01,227 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-07-13 10:14:01,229 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-07-13 10:14:01,229 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-07-13 10:14:01,230 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-07-13 10:14:01,289 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: PokerUserInfoBhv_select_money_ranking.sql
2020-07-13 10:14:01,295 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-07-13 10:14:01,661 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = H2 1.4.199 (2019-03-13)
2020-07-13 10:14:01,662 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = H2 JDBC Driver 1.4.199 (2019-03-13) for JDBC 4.1
2020-07-13 10:14:01,690 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  所持金ランキング取得SQL

 [df:description]
  ポーカーユーザー情報と所持金テーブルをJOINして、
  所持金の多い順・更新日時が新しい順にソート

*/

-- #df:entity#
-- !df:pmb!
-- !!AutoDetect!!

select *
  from POKER_USER_INFO pui
  inner join POSSESSION_MONEY pm on pui.user_id = pm.user_id
 order by pm.possession_money desc, pm.update_date desc
2020-07-13 10:14:01,725 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-07-13 10:14:01,726 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=0 (in 1 files)
2020-07-13 10:14:01,726 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-07-13 10:14:01,941 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s772ms

  DBFLUTE_CLIENT: {poker}
    database  = h2 (H2 1.4.199 (2019-03-13))
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o PokerUserInfoBhv_select_money_ranking.sql

   o: OK (1)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-07-13 10:14:03,087 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-07-13 10:14:03,091 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-07-13 10:14:03,091 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-07-13 10:14:03,091 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-07-13 10:14:03,092 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-07-13 10:14:03,115 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-07-13 10:14:03,116 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-07-13 10:14:03,116 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-07-13 10:14:03,117 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-07-13 10:14:03,134 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-07-13 10:14:03,135 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-07-13 10:14:03,142 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-07-13 10:14:03,223 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: PokerUserInfoBhv_select_money_ranking.sql
2020-07-13 10:14:03,234 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-07-13 10:14:03,543 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = H2 1.4.199 (2019-03-13)
2020-07-13 10:14:03,545 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = H2 JDBC Driver 1.4.199 (2019-03-13) for JDBC 4.1
2020-07-13 10:14:03,550 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  所持金ランキング取得SQL

 [df:description]
  ポーカーユーザー情報と所持金テーブルをJOINして、
  所持金の多い順・更新日時が新しい順にソート

*/

-- #df:entity#
-- !df:pmb!
-- !!AutoDetect!!

select *
  from POKER_USER_INFO pui
  inner join POSSESSION_MONEY pm on pui.user_id = pm.user_id
 order by pm.possession_money desc, pm.update_date desc
2020-07-13 10:14:03,630 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-07-13 10:14:03,631 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=0 (in 1 files)
2020-07-13 10:14:03,704 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-07-13 10:14:03,705 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-07-13 10:14:03,705 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-07-13 10:14:03,706 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-07-13 10:14:03,707 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-07-13 10:14:03,719 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():927) - 
Select
  USER_ID INTEGER(10) related to POSSESSION_MONEY.USER_ID
  USER_NAME VARCHAR(255) related to POKER_USER_INFO.USER_NAME
  PASSWORD VARCHAR(255) related to POKER_USER_INFO.PASSWORD
  LOGIN_DATE TIMESTAMP(26, 6) related to POKER_USER_INFO.LOGIN_DATE
  POSSESSION_MONEY DECIMAL(65535, 32767) related to POSSESSION_MONEY.POSSESSION_MONEY
  UPDATE_DATE TIMESTAMP(26, 6) related to POSSESSION_MONEY.UPDATE_DATE
2020-07-13 10:14:03,729 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-07-13 10:14:03,730 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-07-13 10:14:03,730 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-07-13 10:14:03,731 [main] INFO  (DfSql2EntityTask#showParameterBean():976) - 
SelectPmb (typed to list, entity)
2020-07-13 10:14:03,737 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-07-13 10:14:03,929 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=poker
2020-07-13 10:14:03,930 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=poker
2020-07-13 10:14:03,934 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-07-13 10:14:03,936 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-07-13 10:14:03,949 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-07-13 10:14:03,950 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-07-13 10:14:04,024 [main] INFO  (Database#info():2846) -     parse('Select')
2020-07-13 10:14:04,027 [main] INFO  (Database#info():2846) - }
2020-07-13 10:14:04,029 [main] INFO  (Database#info():2846) - public void parseParameterBean() {
2020-07-13 10:14:04,037 [main] INFO  (Database#info():2846) -     parse('SelectPmb');
2020-07-13 10:14:04,060 [main] INFO  (Database#info():2846) - }
2020-07-13 10:14:04,116 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 1

  PokerUserInfoBhv_select_money_ranking.sql
- - - - - - - - - -/
2020-07-13 10:14:04,126 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-07-13 10:14:04,127 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [UserAp2] by http://localhost:8386/
2020-07-13 10:14:04,137 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-07-13 10:14:04,138 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-07-13 10:14:04,349 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s274ms

  DBFLUTE_CLIENT: {poker}
    database  = h2 (H2 1.4.199 (2019-03-13))
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-07-13 10:14:32,318 [main] INFO  (DfReplaceSchemaTask#begin():94) - +------------------------------------------+
2020-07-13 10:14:32,322 [main] INFO  (DfReplaceSchemaTask#begin():95) - |                                          |
2020-07-13 10:14:32,323 [main] INFO  (DfReplaceSchemaTask#begin():96) - |              ReplaceSchema               |
2020-07-13 10:14:32,330 [main] INFO  (DfReplaceSchemaTask#begin():104) - |                                          |
2020-07-13 10:14:32,331 [main] INFO  (DfReplaceSchemaTask#begin():105) - +------------------------------------------+
2020-07-13 10:14:32,333 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():423) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2020-07-13 10:14:33,102 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-07-13 10:14:33,103 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-07-13 10:14:33,104 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-07-13 10:14:33,104 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-07-13 10:14:33,112 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-07-13 10:14:33,452 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = H2 1.4.199 (2019-03-13)
2020-07-13 10:14:33,453 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = H2 JDBC Driver 1.4.199 (2019-03-13) for JDBC 4.1
2020-07-13 10:14:33,476 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():253) - 
2020-07-13 10:14:33,477 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():254) - * * * * * * * * * * *
2020-07-13 10:14:33,477 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():255) - *                   *
2020-07-13 10:14:33,478 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():256) - * Initialize Schema *
2020-07-13 10:14:33,479 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():257) - *                   *
2020-07-13 10:14:33,479 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():258) - * * * * * * * * * * *
2020-07-13 10:14:33,499 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-07-13 10:14:33,500 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {POKER.PUBLIC as main}
2020-07-13 10:14:33,500 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-07-13 10:14:33,555 [main] INFO  (DfCreateSchemaProcess#createSchema():293) - 
2020-07-13 10:14:33,555 [main] INFO  (DfCreateSchemaProcess#createSchema():294) - * * * * * * * * *
2020-07-13 10:14:33,556 [main] INFO  (DfCreateSchemaProcess#createSchema():295) - *               *
2020-07-13 10:14:33,556 [main] INFO  (DfCreateSchemaProcess#createSchema():296) - * Create Schema *
2020-07-13 10:14:33,557 [main] INFO  (DfCreateSchemaProcess#createSchema():297) - *               *
2020-07-13 10:14:33,557 [main] INFO  (DfCreateSchemaProcess#createSchema():298) - * * * * * * * * *
2020-07-13 10:14:33,562 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema.sql
2020-07-13 10:14:33,567 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- ポーカーユーザー情報
CREATE SEQUENCE "POKER_USER_ID_SEQ1"
2020-07-13 10:14:33,576 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table POKER_USER_INFO (
  USER_ID INTEGER not null default nextval('POKER_USER_ID_SEQ1')
  , USER_NAME VARCHAR(255) not null
  , PASSWORD VARCHAR(255) not null
  , LOGIN_DATE TIMESTAMP not null default now()
  , constraint POKER_USER_INFO_PKC primary key (USER_ID)
)
2020-07-13 10:14:33,593 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table OAUTH_POKER_USER_INFO (
  USER_ID INTEGER not null default nextval('POKER_USER_ID_SEQ1')
  , USER_NAME VARCHAR(255) not null
  , LOGIN_DATE TIMESTAMP not null default now()
  , constraint OAUTH_POKER_USER_INFO_PKC primary key (USER_ID)
)
2020-07-13 10:14:33,597 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- 所持金
 create table POSSESSION_MONEY (
  USER_ID INTEGER not null
  , POSSESSION_MONEY DECIMAL not null
  , UPDATE_DATE TIMESTAMP not null default now()
  , constraint POSSESSION_MONEY_PKC primary key (USER_ID)
)
2020-07-13 10:14:33,601 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table poker_user_info add constraint POKER_USER_INFO_UNQ1
  unique (USER_NAME)
2020-07-13 10:14:33,609 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on table POSSESSION_MONEY is '所持金'
2020-07-13 10:14:33,610 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on column POSSESSION_MONEY.USER_ID is 'ユーザーID'
2020-07-13 10:14:33,611 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on column POSSESSION_MONEY.POSSESSION_MONEY is '所持金'
2020-07-13 10:14:33,612 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on column POSSESSION_MONEY.UPDATE_DATE is '更新日時'
2020-07-13 10:14:33,613 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on table POKER_USER_INFO is 'ポーカーユーザー情報'
2020-07-13 10:14:33,615 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on column POKER_USER_INFO.USER_ID is 'ユーザーID'
2020-07-13 10:14:33,616 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on column POKER_USER_INFO.USER_NAME is 'ユーザー名'
2020-07-13 10:14:33,618 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on column POKER_USER_INFO.PASSWORD is 'パスワード'
2020-07-13 10:14:33,619 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on column POKER_USER_INFO.LOGIN_DATE is 'ログイン日時'
2020-07-13 10:14:33,621 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=14 failure=0
2020-07-13 10:14:33,622 [main] INFO  (DfSqlFileFireMan#fire():93) - Create Schema: success=14, failure=0 (in 1 files)
2020-07-13 10:14:33,667 [main] INFO  (DfLoadDataProcess#execute():130) - 
2020-07-13 10:14:33,667 [main] INFO  (DfLoadDataProcess#execute():131) - * * * * * * * * * * *
2020-07-13 10:14:33,668 [main] INFO  (DfLoadDataProcess#execute():132) - *                   *
2020-07-13 10:14:33,668 [main] INFO  (DfLoadDataProcess#execute():133) - * Load Data         *
2020-07-13 10:14:33,669 [main] INFO  (DfLoadDataProcess#execute():134) - *                   *
2020-07-13 10:14:33,670 [main] INFO  (DfLoadDataProcess#execute():135) - * * * * * * * * * * *
2020-07-13 10:14:33,699 [main] INFO  (DfTakeFinallyProcess#takeFinally():244) - 
2020-07-13 10:14:33,699 [main] INFO  (DfTakeFinallyProcess#takeFinally():245) - * * * * * * * **
2020-07-13 10:14:33,700 [main] INFO  (DfTakeFinallyProcess#takeFinally():246) - *              *
2020-07-13 10:14:33,700 [main] INFO  (DfTakeFinallyProcess#takeFinally():247) - * Take Finally *
2020-07-13 10:14:33,701 [main] INFO  (DfTakeFinallyProcess#takeFinally():248) - *              *
2020-07-13 10:14:33,701 [main] INFO  (DfTakeFinallyProcess#takeFinally():249) - * * * * * * * **
2020-07-13 10:14:33,710 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: take-finally.sql
2020-07-13 10:14:33,713 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2020-07-13 10:14:33,713 [main] INFO  (DfSqlFileFireMan#fire():93) - Take Finally: success=0, failure=0 (in 1 files)
2020-07-13 10:14:33,716 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-07-13 10:14:33,731 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s426ms

  DBFLUTE_CLIENT: {poker}
    database  = h2 (H2 1.4.199 (2019-03-13))
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 Create Schema: success=14, failure=0 (in 1 files) - 00m00s156ms
  (Initialize Schema) - 00m00s077ms
  (Create Schema) - 00m00s064ms
  o replace-schema.sql

 Load Data: *empty loading - 00m00s025ms
  - (no data file)

 Take Finally: success=0, failure=0 (in 1 files) - 00m00s017ms
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2020-07-13 10:14:34,867 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-07-13 10:14:34,871 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-07-13 10:14:34,871 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-07-13 10:14:34,872 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-07-13 10:14:34,873 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-07-13 10:14:34,906 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-07-13 10:14:34,907 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-07-13 10:14:34,907 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-07-13 10:14:34,908 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-07-13 10:14:34,952 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-07-13 10:14:34,953 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-07-13 10:14:34,953 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-07-13 10:14:34,964 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-07-13 10:14:35,027 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-07-13 10:14:35,029 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-07-13 10:14:35,325 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = H2 1.4.199 (2019-03-13)
2020-07-13 10:14:35,326 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = H2 JDBC Driver 1.4.199 (2019-03-13) for JDBC 4.1
2020-07-13 10:14:35,327 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-07-13 10:14:35,329 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-07-13 10:14:35,329 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {POKER.PUBLIC as main}
2020-07-13 10:14:35,329 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-07-13 10:14:35,366 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-07-13 10:14:35,367 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-07-13 10:14:35,367 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-07-13 10:14:35,368 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ POKER.PUBLIC.OAUTH_POKER_USER_INFO(TABLE)
2020-07-13 10:14:35,418 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ POKER.PUBLIC.POKER_USER_INFO(TABLE) // ポーカーユーザー情報
2020-07-13 10:14:35,434 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ POKER.PUBLIC.POSSESSION_MONEY(TABLE) // 所持金
2020-07-13 10:14:35,448 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-07-13 10:14:35,449 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-07-13 10:14:35,450 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 3
2020-07-13 10:14:35,450 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-07-13 10:14:35,451 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-07-13 10:14:35,453 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-07-13 10:14:35,457 [main] INFO  (DfSequenceExtractorH2#doGetSequenceMap():52) - ...Loading sequence informations
2020-07-13 10:14:35,459 [main] INFO  (DfSequenceExtractorBase#selectStringList():75) - select * from INFORMATION_SCHEMA.SEQUENCES where SEQUENCE_SCHEMA in ('PUBLIC')
2020-07-13 10:14:35,464 [main] INFO  (DfSequenceExtractorH2#doGetSequenceMap():84) - 
[SEQUENCE]
 POKER.PUBLIC.POKER_USER_ID_SEQ1 = POKER.PUBLIC.POKER_USER_ID_SEQ1:{null to null, increment 1}
2020-07-13 10:14:35,465 [main] INFO  (DfSchemaXmlSerializer#processSequence():810) - ...Processing sequences: 1
2020-07-13 10:14:35,469 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-07-13 10:14:35,470 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-poker.xml
2020-07-13 10:14:35,472 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-07-13 10:14:35,485 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-07-13 10:14:35,488 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-07-13 10:14:35,542 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2020-07-13 10:14:35,542 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-07-13 10:14:35,556 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s701ms

  DBFLUTE_CLIENT: {poker}
    database  = h2 (H2 1.4.199 (2019-03-13))
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-07-13 10:14:36,646 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-07-13 10:14:36,648 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-07-13 10:14:36,649 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-07-13 10:14:36,649 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-07-13 10:14:36,650 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-07-13 10:14:36,674 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-07-13 10:14:36,674 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-07-13 10:14:36,675 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-07-13 10:14:36,675 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-07-13 10:14:36,678 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-07-13 10:14:36,678 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-07-13 10:14:36,679 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-07-13 10:14:36,679 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-07-13 10:14:36,680 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-07-13 10:14:36,680 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-07-13 10:14:36,727 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-07-13 10:14:36,782 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-07-13 10:14:36,783 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-07-13 10:14:36,784 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-07-13 10:14:36,786 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-07-13 10:14:36,786 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-07-13 10:14:36,788 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-07-13 10:14:36,790 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-07-13 10:14:36,790 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-07-13 10:14:36,793 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-07-13 10:14:36,805 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=poker
2020-07-13 10:14:36,870 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-07-13 10:14:37,013 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-07-13 10:14:37,021 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-07-13 10:14:37,054 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=1
2020-07-13 10:14:37,099 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-07-13 10:14:37,099 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-07-13 10:14:37,114 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-07-13 10:14:37,179 [main] INFO  (DfSequenceExtractorH2#doGetSequenceMap():52) - ...Loading sequence informations
2020-07-13 10:14:37,182 [main] INFO  (DfSequenceExtractorBase#selectStringList():75) - select * from INFORMATION_SCHEMA.SEQUENCES where SEQUENCE_SCHEMA in ('PUBLIC')
2020-07-13 10:14:37,185 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-07-13 10:14:37,503 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = H2 1.4.199 (2019-03-13)
2020-07-13 10:14:37,504 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = H2 JDBC Driver 1.4.199 (2019-03-13) for JDBC 4.1
2020-07-13 10:14:37,532 [main] INFO  (DfSequenceExtractorH2#doGetSequenceMap():84) - 
[SEQUENCE]
 POKER.PUBLIC.POKER_USER_ID_SEQ1 = POKER.PUBLIC.POKER_USER_ID_SEQ1:{null to null, increment 1}
2020-07-13 10:14:37,595 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-07-13 10:14:37,597 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [UserAp2] by http://localhost:8386/
2020-07-13 10:14:37,634 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-07-13 10:14:37,635 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-07-13 10:14:37,845 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s214ms

  DBFLUTE_CLIENT: {poker}
    database  = h2 (H2 1.4.199 (2019-03-13))
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-07-13 10:14:41,009 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-07-13 10:14:41,015 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-07-13 10:14:41,015 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-07-13 10:14:41,016 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-07-13 10:14:41,016 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-07-13 10:14:41,045 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-07-13 10:14:41,046 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-07-13 10:14:41,047 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-07-13 10:14:41,047 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-07-13 10:14:41,067 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-07-13 10:14:41,068 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-07-13 10:14:41,114 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-07-13 10:14:41,155 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-07-13 10:14:41,323 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-07-13 10:14:41,335 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-07-13 10:14:41,336 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-07-13 10:14:41,338 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-07-13 10:14:41,342 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-07-13 10:14:41,343 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-07-13 10:14:41,345 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-07-13 10:14:41,349 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-07-13 10:14:41,349 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-07-13 10:14:41,352 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-07-13 10:14:41,363 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=poker
2020-07-13 10:14:41,369 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-07-13 10:14:41,370 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-07-13 10:14:41,374 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-07-13 10:14:41,375 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-07-13 10:14:41,375 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-07-13 10:14:41,376 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-07-13 10:14:41,376 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-07-13 10:14:41,377 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-07-13 10:14:41,377 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-07-13 10:14:41,377 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-07-13 10:14:41,390 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-07-13 10:14:41,392 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-07-13 10:14:41,396 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-07-13 10:14:41,409 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-07-13 10:14:41,414 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-07-13 10:14:41,430 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-07-13 10:14:41,433 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-07-13 10:14:41,440 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-07-13 10:14:41,445 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-07-13 10:14:41,449 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-07-13 10:14:41,453 [main] INFO  (Database#info():2846) - }
2020-07-13 10:14:41,454 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-07-13 10:14:41,455 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-07-13 10:14:41,470 [main] INFO  (Database#info():2846) - }
2020-07-13 10:14:41,476 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-07-13 10:14:41,500 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-07-13 10:14:41,500 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-07-13 10:14:41,501 [main] INFO  (Database#info():2846) -     parse('OAUTH_POKER_USER_INFO');
2020-07-13 10:14:41,578 [main] INFO  (DfSequenceExtractorH2#doGetSequenceMap():52) - ...Loading sequence informations
2020-07-13 10:14:41,581 [main] INFO  (DfSequenceExtractorBase#selectStringList():75) - select * from INFORMATION_SCHEMA.SEQUENCES where SEQUENCE_SCHEMA in ('PUBLIC')
2020-07-13 10:14:41,585 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-07-13 10:14:41,897 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = H2 1.4.199 (2019-03-13)
2020-07-13 10:14:41,897 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = H2 JDBC Driver 1.4.199 (2019-03-13) for JDBC 4.1
2020-07-13 10:14:41,932 [main] INFO  (DfSequenceExtractorH2#doGetSequenceMap():84) - 
[SEQUENCE]
 POKER.PUBLIC.POKER_USER_ID_SEQ1 = POKER.PUBLIC.POKER_USER_ID_SEQ1:{null to null, increment 1}
2020-07-13 10:14:41,994 [main] INFO  (Database#info():2846) -     parse('POKER_USER_INFO');
2020-07-13 10:14:42,086 [main] INFO  (Database#info():2846) -     parse('POSSESSION_MONEY');
2020-07-13 10:14:42,168 [main] INFO  (Database#info():2846) - }
2020-07-13 10:14:42,169 [main] INFO  (Database#info():2846) -  
2020-07-13 10:14:42,223 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-07-13 10:14:42,224 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [UserAp2] by http://localhost:8386/
2020-07-13 10:14:42,231 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-07-13 10:14:42,232 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-07-13 10:14:42,443 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s465ms

  DBFLUTE_CLIENT: {poker}
    database  = h2 (H2 1.4.199 (2019-03-13))
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-07-13 10:14:43,538 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-07-13 10:14:43,541 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-07-13 10:14:43,542 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-07-13 10:14:43,542 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-07-13 10:14:43,543 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-07-13 10:14:43,567 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-07-13 10:14:43,567 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-07-13 10:14:43,569 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-07-13 10:14:43,569 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-07-13 10:14:43,618 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: PokerUserInfoBhv_select_money_ranking.sql
2020-07-13 10:14:43,623 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-07-13 10:14:43,951 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = H2 1.4.199 (2019-03-13)
2020-07-13 10:14:43,952 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = H2 JDBC Driver 1.4.199 (2019-03-13) for JDBC 4.1
2020-07-13 10:14:43,980 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  所持金ランキング取得SQL

 [df:description]
  ポーカーユーザー情報と所持金テーブルをJOINして、
  所持金の多い順・更新日時が新しい順にソート

*/

-- #df:entity#
-- !df:pmb!
-- !!AutoDetect!!

select *
  from POKER_USER_INFO pui
  inner join POSSESSION_MONEY pm on pui.user_id = pm.user_id
 order by pm.possession_money desc, pm.update_date desc
2020-07-13 10:14:44,012 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-07-13 10:14:44,013 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=0 (in 1 files)
2020-07-13 10:14:44,014 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-07-13 10:14:44,227 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s701ms

  DBFLUTE_CLIENT: {poker}
    database  = h2 (H2 1.4.199 (2019-03-13))
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o PokerUserInfoBhv_select_money_ranking.sql

   o: OK (1)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-07-13 10:14:45,447 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-07-13 10:14:45,450 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-07-13 10:14:45,451 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-07-13 10:14:45,451 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-07-13 10:14:45,452 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-07-13 10:14:45,475 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-07-13 10:14:45,475 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-07-13 10:14:45,476 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-07-13 10:14:45,476 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-07-13 10:14:45,496 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-07-13 10:14:45,496 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-07-13 10:14:45,503 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-07-13 10:14:45,575 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: PokerUserInfoBhv_select_money_ranking.sql
2020-07-13 10:14:45,580 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-07-13 10:14:45,894 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = H2 1.4.199 (2019-03-13)
2020-07-13 10:14:45,895 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = H2 JDBC Driver 1.4.199 (2019-03-13) for JDBC 4.1
2020-07-13 10:14:45,909 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  所持金ランキング取得SQL

 [df:description]
  ポーカーユーザー情報と所持金テーブルをJOINして、
  所持金の多い順・更新日時が新しい順にソート

*/

-- #df:entity#
-- !df:pmb!
-- !!AutoDetect!!

select *
  from POKER_USER_INFO pui
  inner join POSSESSION_MONEY pm on pui.user_id = pm.user_id
 order by pm.possession_money desc, pm.update_date desc
2020-07-13 10:14:45,985 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-07-13 10:14:45,986 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=0 (in 1 files)
2020-07-13 10:14:46,039 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-07-13 10:14:46,040 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-07-13 10:14:46,041 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-07-13 10:14:46,042 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-07-13 10:14:46,042 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-07-13 10:14:46,054 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():927) - 
Select
  USER_ID INTEGER(10) related to POSSESSION_MONEY.USER_ID
  USER_NAME VARCHAR(255) related to POKER_USER_INFO.USER_NAME
  PASSWORD VARCHAR(255) related to POKER_USER_INFO.PASSWORD
  LOGIN_DATE TIMESTAMP(26, 6) related to POKER_USER_INFO.LOGIN_DATE
  POSSESSION_MONEY DECIMAL(65535, 32767) related to POSSESSION_MONEY.POSSESSION_MONEY
  UPDATE_DATE TIMESTAMP(26, 6) related to POSSESSION_MONEY.UPDATE_DATE
2020-07-13 10:14:46,065 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-07-13 10:14:46,065 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-07-13 10:14:46,066 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-07-13 10:14:46,067 [main] INFO  (DfSql2EntityTask#showParameterBean():976) - 
SelectPmb (typed to list, entity)
2020-07-13 10:14:46,072 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-07-13 10:14:46,258 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=poker
2020-07-13 10:14:46,259 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=poker
2020-07-13 10:14:46,263 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-07-13 10:14:46,266 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-07-13 10:14:46,279 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-07-13 10:14:46,280 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-07-13 10:14:46,363 [main] INFO  (Database#info():2846) -     parse('Select')
2020-07-13 10:14:46,366 [main] INFO  (Database#info():2846) - }
2020-07-13 10:14:46,368 [main] INFO  (Database#info():2846) - public void parseParameterBean() {
2020-07-13 10:14:46,378 [main] INFO  (Database#info():2846) -     parse('SelectPmb');
2020-07-13 10:14:46,400 [main] INFO  (Database#info():2846) - }
2020-07-13 10:14:46,453 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 1

  PokerUserInfoBhv_select_money_ranking.sql
- - - - - - - - - -/
2020-07-13 10:14:46,465 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-07-13 10:14:46,466 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [UserAp2] by http://localhost:8386/
2020-07-13 10:14:46,478 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-07-13 10:14:46,479 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-07-13 10:14:46,692 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s258ms

  DBFLUTE_CLIENT: {poker}
    database  = h2 (H2 1.4.199 (2019-03-13))
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
2020-07-13 12:35:07,845 [main] INFO  (DfReplaceSchemaTask#begin():94) - +------------------------------------------+
2020-07-13 12:35:07,851 [main] INFO  (DfReplaceSchemaTask#begin():95) - |                                          |
2020-07-13 12:35:07,851 [main] INFO  (DfReplaceSchemaTask#begin():96) - |              ReplaceSchema               |
2020-07-13 12:35:07,871 [main] INFO  (DfReplaceSchemaTask#begin():104) - |                                          |
2020-07-13 12:35:07,872 [main] INFO  (DfReplaceSchemaTask#begin():105) - +------------------------------------------+
2020-07-13 12:35:07,875 [main] INFO  (DfReplaceSchemaTask#waitBeforeReps():423) - ...Waiting for your GO SIGN from stdin before ReplaceSchema:
2020-07-13 12:35:09,443 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-07-13 12:35:09,444 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-07-13 12:35:09,445 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-07-13 12:35:09,445 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-07-13 12:35:09,457 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-07-13 12:35:10,044 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = H2 1.4.199 (2019-03-13)
2020-07-13 12:35:10,045 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = H2 JDBC Driver 1.4.199 (2019-03-13) for JDBC 4.1
2020-07-13 12:35:10,079 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():253) - 
2020-07-13 12:35:10,080 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():254) - * * * * * * * * * * *
2020-07-13 12:35:10,081 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():255) - *                   *
2020-07-13 12:35:10,084 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():256) - * Initialize Schema *
2020-07-13 12:35:10,084 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():257) - *                   *
2020-07-13 12:35:10,085 [main] INFO  (DfCreateSchemaProcess#initializeSchemaMainDrop():258) - * * * * * * * * * * *
2020-07-13 12:35:10,117 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-07-13 12:35:10,118 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {POKER.PUBLIC as main}
2020-07-13 12:35:10,118 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-07-13 12:35:10,212 [main] INFO  (DfCreateSchemaProcess#createSchema():293) - 
2020-07-13 12:35:10,213 [main] INFO  (DfCreateSchemaProcess#createSchema():294) - * * * * * * * * *
2020-07-13 12:35:10,215 [main] INFO  (DfCreateSchemaProcess#createSchema():295) - *               *
2020-07-13 12:35:10,216 [main] INFO  (DfCreateSchemaProcess#createSchema():296) - * Create Schema *
2020-07-13 12:35:10,217 [main] INFO  (DfCreateSchemaProcess#createSchema():297) - *               *
2020-07-13 12:35:10,217 [main] INFO  (DfCreateSchemaProcess#createSchema():298) - * * * * * * * * *
2020-07-13 12:35:10,226 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: replace-schema.sql
2020-07-13 12:35:10,236 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- ポーカーユーザー情報
CREATE SEQUENCE "POKER_USER_ID_SEQ1"
2020-07-13 12:35:10,253 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table POKER_USER_INFO (
  USER_ID INTEGER not null default nextval('POKER_USER_ID_SEQ1')
  , USER_NAME VARCHAR(255) not null
  , PASSWORD VARCHAR(255) not null
  , LOGIN_DATE TIMESTAMP not null default now()
  , constraint POKER_USER_INFO_PKC primary key (USER_ID)
)
2020-07-13 12:35:10,285 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
create table OAUTH_POKER_USER_INFO (
  USER_ID INTEGER not null default nextval('POKER_USER_ID_SEQ1')
  , USER_NAME VARCHAR(255) not null
  , LOGIN_DATE TIMESTAMP not null default now()
  , constraint OAUTH_POKER_USER_INFO_PKC primary key (USER_ID)
)
2020-07-13 12:35:10,293 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
-- 所持金
 create table POSSESSION_MONEY (
  USER_ID INTEGER not null
  , POSSESSION_MONEY DECIMAL not null
  , UPDATE_DATE TIMESTAMP not null default now()
  , constraint POSSESSION_MONEY_PKC primary key (USER_ID)
)
2020-07-13 12:35:10,304 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - 
alter table poker_user_info add constraint POKER_USER_INFO_UNQ1
  unique (USER_NAME)
2020-07-13 12:35:10,313 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on table POSSESSION_MONEY is '所持金'
2020-07-13 12:35:10,315 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on column POSSESSION_MONEY.USER_ID is 'ユーザーID'
2020-07-13 12:35:10,318 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on column POSSESSION_MONEY.POSSESSION_MONEY is '所持金'
2020-07-13 12:35:10,320 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on column POSSESSION_MONEY.UPDATE_DATE is '更新日時'
2020-07-13 12:35:10,322 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on table POKER_USER_INFO is 'ポーカーユーザー情報'
2020-07-13 12:35:10,323 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on column POKER_USER_INFO.USER_ID is 'ユーザーID'
2020-07-13 12:35:10,324 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on column POKER_USER_INFO.USER_NAME is 'ユーザー名'
2020-07-13 12:35:10,326 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on column POKER_USER_INFO.PASSWORD is 'パスワード'
2020-07-13 12:35:10,328 [main] INFO  (DfSqlFileRunnerBase#traceSql():168) - comment on column POKER_USER_INFO.LOGIN_DATE is 'ログイン日時'
2020-07-13 12:35:10,331 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=14 failure=0
2020-07-13 12:35:10,337 [main] INFO  (DfSqlFileFireMan#fire():93) - Create Schema: success=14, failure=0 (in 1 files)
2020-07-13 12:35:10,410 [main] INFO  (DfLoadDataProcess#execute():130) - 
2020-07-13 12:35:10,411 [main] INFO  (DfLoadDataProcess#execute():131) - * * * * * * * * * * *
2020-07-13 12:35:10,411 [main] INFO  (DfLoadDataProcess#execute():132) - *                   *
2020-07-13 12:35:10,412 [main] INFO  (DfLoadDataProcess#execute():133) - * Load Data         *
2020-07-13 12:35:10,412 [main] INFO  (DfLoadDataProcess#execute():134) - *                   *
2020-07-13 12:35:10,413 [main] INFO  (DfLoadDataProcess#execute():135) - * * * * * * * * * * *
2020-07-13 12:35:10,474 [main] INFO  (DfTakeFinallyProcess#takeFinally():244) - 
2020-07-13 12:35:10,475 [main] INFO  (DfTakeFinallyProcess#takeFinally():245) - * * * * * * * **
2020-07-13 12:35:10,476 [main] INFO  (DfTakeFinallyProcess#takeFinally():246) - *              *
2020-07-13 12:35:10,476 [main] INFO  (DfTakeFinallyProcess#takeFinally():247) - * Take Finally *
2020-07-13 12:35:10,477 [main] INFO  (DfTakeFinallyProcess#takeFinally():248) - *              *
2020-07-13 12:35:10,477 [main] INFO  (DfTakeFinallyProcess#takeFinally():249) - * * * * * * * **
2020-07-13 12:35:10,500 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: take-finally.sql
2020-07-13 12:35:10,505 [main] INFO  (DfSqlFileRunnerBase#traceResult():172) -  -> success=0 failure=0
2020-07-13 12:35:10,506 [main] INFO  (DfSqlFileFireMan#fire():93) - Take Finally: success=0, failure=0 (in 1 files)
2020-07-13 12:35:10,511 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-07-13 12:35:10,551 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s736ms

  DBFLUTE_CLIENT: {poker}
    database  = h2 (H2 1.4.199 (2019-03-13))
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 Create Schema: success=14, failure=0 (in 1 files) - 00m00s267ms
  (Initialize Schema) - 00m00s130ms
  (Create Schema) - 00m00s120ms
  o replace-schema.sql

 Load Data: *empty loading - 00m00s054ms
  - (no data file)

 Take Finally: success=0, failure=0 (in 1 files) - 00m00s035ms
  o take-finally.sql
_/_/_/_/_/_/_/_/_/_/ {ReplaceSchema}
2020-07-13 12:35:12,239 [main] INFO  (TorqueJDBCTransformTask#begin():104) - +------------------------------------------+
2020-07-13 12:35:12,244 [main] INFO  (TorqueJDBCTransformTask#begin():105) - |                                          |
2020-07-13 12:35:12,245 [main] INFO  (TorqueJDBCTransformTask#begin():106) - |                   JDBC                   |
2020-07-13 12:35:12,245 [main] INFO  (TorqueJDBCTransformTask#begin():107) - |                                          |
2020-07-13 12:35:12,246 [main] INFO  (TorqueJDBCTransformTask#begin():108) - +------------------------------------------+
2020-07-13 12:35:12,287 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-07-13 12:35:12,287 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-07-13 12:35:12,289 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-07-13 12:35:12,289 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-07-13 12:35:12,371 [main] INFO  (DfSchemaXmlSerializer#serialize():286) - 
2020-07-13 12:35:12,372 [main] INFO  (DfSchemaXmlSerializer#serialize():287) - ...Starting to process JDBC to SchemaXML
2020-07-13 12:35:12,373 [main] INFO  (DfSchemaXmlSerializer#doLoadPreviousSchema():1532) - ...Loading previous schema (schema diff process)
2020-07-13 12:35:12,397 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-07-13 12:35:12,503 [main] INFO  (DfSchemaXmlSerializer#generateXML():360) - ...Getting DB connection
2020-07-13 12:35:12,507 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-07-13 12:35:12,952 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = H2 1.4.199 (2019-03-13)
2020-07-13 12:35:12,953 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = H2 JDBC Driver 1.4.199 (2019-03-13) for JDBC 4.1
2020-07-13 12:35:12,955 [main] INFO  (DfSchemaXmlSerializer#generateXML():363) - ...Getting DB meta data
2020-07-13 12:35:12,957 [main] INFO  (DfTableExtractor#doGetTableList():66) - ...Getting tables:
2020-07-13 12:35:12,958 [main] INFO  (DfTableExtractor#doGetTableList():67) -   schema = {POKER.PUBLIC as main}
2020-07-13 12:35:12,958 [main] INFO  (DfTableExtractor#doGetTableList():68) -   types  = [TABLE, VIEW]
2020-07-13 12:35:13,017 [main] INFO  (DfSchemaXmlSerializer#processTable():420) - 
2020-07-13 12:35:13,018 [main] INFO  (DfSchemaXmlSerializer#processTable():421) - $ /= = = = = = = = = = = = = = = = = = = = = = = = = =
2020-07-13 12:35:13,019 [main] INFO  (DfSchemaXmlSerializer#processTable():422) - $ [Table List]
2020-07-13 12:35:13,019 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ POKER.PUBLIC.OAUTH_POKER_USER_INFO(TABLE)
2020-07-13 12:35:13,115 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ POKER.PUBLIC.POKER_USER_INFO(TABLE) // ポーカーユーザー情報
2020-07-13 12:35:13,142 [main] INFO  (DfSchemaXmlSerializer#doProcessTable():502) - $ POKER.PUBLIC.POSSESSION_MONEY(TABLE) // 所持金
2020-07-13 12:35:13,164 [main] INFO  (DfSchemaXmlSerializer#processTable():434) - $ 
2020-07-13 12:35:13,166 [main] INFO  (DfSchemaXmlSerializer#processTable():435) - $ [Table Count]
2020-07-13 12:35:13,169 [main] INFO  (DfSchemaXmlSerializer#processTable():436) - $ 3
2020-07-13 12:35:13,170 [main] INFO  (DfSchemaXmlSerializer#processTable():437) - $ = = = = = = = = = =/
2020-07-13 12:35:13,170 [main] INFO  (DfSchemaXmlSerializer#processTable():438) - 
2020-07-13 12:35:13,174 [main] INFO  (DfSchemaXmlSerializer#processSequence():805) - ...Getting sequences
2020-07-13 12:35:13,183 [main] INFO  (DfSequenceExtractorH2#doGetSequenceMap():52) - ...Loading sequence informations
2020-07-13 12:35:13,189 [main] INFO  (DfSequenceExtractorBase#selectStringList():75) - select * from INFORMATION_SCHEMA.SEQUENCES where SEQUENCE_SCHEMA in ('PUBLIC')
2020-07-13 12:35:13,197 [main] INFO  (DfSequenceExtractorH2#doGetSequenceMap():84) - 
[SEQUENCE]
 POKER.PUBLIC.POKER_USER_ID_SEQ1 = POKER.PUBLIC.POKER_USER_ID_SEQ1:{null to null, increment 1}
2020-07-13 12:35:13,203 [main] INFO  (DfSchemaXmlSerializer#processSequence():810) - ...Processing sequences: 1
2020-07-13 12:35:13,209 [main] INFO  (DfSchemaXmlSerializer#serialize():301) - ...Serializing XML:
2020-07-13 12:35:13,209 [main] INFO  (DfSchemaXmlSerializer#serialize():302) -   filePath = ./schema/project-schema-poker.xml
2020-07-13 12:35:13,210 [main] INFO  (DfSchemaXmlSerializer#serialize():303) -   encoding = UTF-8
2020-07-13 12:35:13,233 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1550) - ...Loading next schema (schema diff process)
2020-07-13 12:35:13,237 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-07-13 12:35:13,333 [main] INFO  (DfSchemaXmlSerializer#doLoadNextSchema():1565) -  -> same as previous (schema diff)
2020-07-13 12:35:13,333 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-07-13 12:35:13,355 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s134ms

  DBFLUTE_CLIENT: {poker}
    database  = h2 (H2 1.4.199 (2019-03-13))
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {JDBC}
2020-07-13 12:35:14,907 [main] INFO  (TorqueDocumentationTask#begin():193) - +------------------------------------------+
2020-07-13 12:35:14,911 [main] INFO  (TorqueDocumentationTask#begin():194) - |                                          |
2020-07-13 12:35:14,911 [main] INFO  (TorqueDocumentationTask#begin():195) - |                   Doc                    |
2020-07-13 12:35:14,912 [main] INFO  (TorqueDocumentationTask#begin():203) - |                                          |
2020-07-13 12:35:14,912 [main] INFO  (TorqueDocumentationTask#begin():204) - +------------------------------------------+
2020-07-13 12:35:14,947 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-07-13 12:35:14,948 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-07-13 12:35:14,948 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-07-13 12:35:14,949 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-07-13 12:35:14,954 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():265) - 
2020-07-13 12:35:14,954 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():266) - * * * * * * * * * * *
2020-07-13 12:35:14,955 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():267) - *                   *
2020-07-13 12:35:14,956 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():268) - *    Schema HTML    *
2020-07-13 12:35:14,956 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():269) - *                   *
2020-07-13 12:35:14,958 [main] INFO  (TorqueDocumentationTask#processSchemaHtml():270) - * * * * * * * * * * *
2020-07-13 12:35:15,043 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-07-13 12:35:15,125 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-07-13 12:35:15,126 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-07-13 12:35:15,128 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-07-13 12:35:15,130 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-07-13 12:35:15,131 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-07-13 12:35:15,133 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-07-13 12:35:15,137 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-07-13 12:35:15,137 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-07-13 12:35:15,142 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-07-13 12:35:15,169 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=poker
2020-07-13 12:35:15,275 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("doc/ControlDocument.vm", ctx);
2020-07-13 12:35:15,545 [main] INFO  (Database#doEnableDocumentOutputDirectory():1242) - ...Setting up documentOutputDirectory: ./output/doc
2020-07-13 12:35:15,558 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():242) - ...Loading schema history
2020-07-13 12:35:15,599 [main] INFO  (DfDocumentSelector#doLoadSchemaHistory():246) -  -> found history: count=1
2020-07-13 12:35:15,674 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():50) -  
2020-07-13 12:35:15,675 [main] INFO  (DfSchemaHtmlDataArrangeQuery#getArrangeQueryTableMap():51) - ...Setting up arrange queries for documents (ArrangeQueryDoc)
2020-07-13 12:35:15,720 [main] INFO  (DfArrangeQueryDocSetupper#doExtractArrangeQuery():106) -  -> no arrange query
2020-07-13 12:35:15,910 [main] INFO  (DfSequenceExtractorH2#doGetSequenceMap():52) - ...Loading sequence informations
2020-07-13 12:35:15,914 [main] INFO  (DfSequenceExtractorBase#selectStringList():75) - select * from INFORMATION_SCHEMA.SEQUENCES where SEQUENCE_SCHEMA in ('PUBLIC')
2020-07-13 12:35:15,919 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-07-13 12:35:16,404 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = H2 1.4.199 (2019-03-13)
2020-07-13 12:35:16,405 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = H2 JDBC Driver 1.4.199 (2019-03-13) for JDBC 4.1
2020-07-13 12:35:16,453 [main] INFO  (DfSequenceExtractorH2#doGetSequenceMap():84) - 
[SEQUENCE]
 POKER.PUBLIC.POKER_USER_ID_SEQ1 = POKER.PUBLIC.POKER_USER_ID_SEQ1:{null to null, increment 1}
2020-07-13 12:35:16,597 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-07-13 12:35:16,600 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [UserAp2] by http://localhost:8386/
2020-07-13 12:35:16,869 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-07-13 12:35:16,870 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-07-13 12:35:17,084 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s196ms

  DBFLUTE_CLIENT: {poker}
    database  = h2 (H2 1.4.199 (2019-03-13))
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Doc}
2020-07-13 12:35:22,537 [main] INFO  (TorqueDataModelTask#begin():110) - +------------------------------------------+
2020-07-13 12:35:22,550 [main] INFO  (TorqueDataModelTask#begin():111) - |                                          |
2020-07-13 12:35:22,552 [main] INFO  (TorqueDataModelTask#begin():112) - |                 Generate                 |
2020-07-13 12:35:22,556 [main] INFO  (TorqueDataModelTask#begin():113) - |                                          |
2020-07-13 12:35:22,558 [main] INFO  (TorqueDataModelTask#begin():114) - +------------------------------------------+
2020-07-13 12:35:22,753 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-07-13 12:35:22,754 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-07-13 12:35:22,755 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-07-13 12:35:22,755 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-07-13 12:35:22,883 [main] INFO  (TorqueDataModelTask#setupControlTemplate():166) - 
2020-07-13 12:35:22,884 [main] INFO  (TorqueDataModelTask#setupControlTemplate():167) - ...Using Java control: om/ControlGenerateJava.vm
2020-07-13 12:35:22,937 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-07-13 12:35:22,981 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlGenerateJava.vm", ctx);
2020-07-13 12:35:23,191 [main] INFO  (Database#doEnableGenerateOutputDirectory():1210) - ...Setting up generateOutputDirectory: ../src/main/java
2020-07-13 12:35:23,195 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():62) - /=======================================
2020-07-13 12:35:23,196 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():63) - ...Initializing additional primary keys.
2020-07-13 12:35:23,197 [main] INFO  (DfAdditionalPrimaryKeyInitializer#initializeAdditionalPrimaryKey():88) - ==========/
2020-07-13 12:35:23,198 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():62) - /=======================================
2020-07-13 12:35:23,199 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():63) - ...Initializing additional unique keys.
2020-07-13 12:35:23,201 [main] INFO  (DfAdditionalUniqueKeyInitializer#initializeAdditionalUniqueKey():83) - ==========/
2020-07-13 12:35:23,203 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():68) - /=======================================
2020-07-13 12:35:23,204 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():69) - ...Initializing additional foreign keys.
2020-07-13 12:35:23,210 [main] INFO  (DfAdditionalForeignKeyInitializer#initializeAdditionalForeignKey():88) - ==========/
2020-07-13 12:35:23,223 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=poker
2020-07-13 12:35:23,235 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():58) - /=============================
2020-07-13 12:35:23,235 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():59) - ...Initializing include query.
2020-07-13 12:35:23,238 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - String
2020-07-13 12:35:23,239 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Number
2020-07-13 12:35:23,242 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - Date
2020-07-13 12:35:23,242 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotEqual -> []
2020-07-13 12:35:23,243 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   InScope -> []
2020-07-13 12:35:23,243 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():86) -   NotInScope -> []
2020-07-13 12:35:23,244 [main] INFO  (DfIncludeQueryInitializer#checkQueryMap():81) - OrderBy
2020-07-13 12:35:23,244 [main] INFO  (DfIncludeQueryInitializer#initializeIncludeQuery():61) - ========/
2020-07-13 12:35:23,265 [main] INFO  (Database#info():2846) - public void parseAllCommon() {
2020-07-13 12:35:23,267 [main] INFO  (Database#info():2846) -     parse('DBCurrent');
2020-07-13 12:35:23,285 [main] INFO  (Database#info():2846) -     parse('DBFluteConfig');
2020-07-13 12:35:23,307 [main] INFO  (Database#info():2846) -     parse('DBFluteInitializer');
2020-07-13 12:35:23,316 [main] INFO  (Database#info():2846) -     parse('DBMetaInstanceHandler');
2020-07-13 12:35:23,347 [main] INFO  (Database#info():2846) -     parse('EntityDefinedCommonColumn');
2020-07-13 12:35:23,352 [main] INFO  (Database#info():2846) -     parse('ImplementedBehaviorSelector');
2020-07-13 12:35:23,364 [main] INFO  (Database#info():2846) -     parse('ImplementedCommonColumnAutoSetupper');
2020-07-13 12:35:23,377 [main] INFO  (Database#info():2846) -     parse('ImplementedInvokerAssistant');
2020-07-13 12:35:23,394 [main] INFO  (Database#info():2846) -     parse('ImplementedSqlClauseCreator');
2020-07-13 12:35:23,407 [main] INFO  (Database#info():2846) - }
2020-07-13 12:35:23,407 [main] INFO  (Database#info():2846) - public void parseContainerConfig() {
2020-07-13 12:35:23,409 [main] INFO  (Database#info():2846) -     parse('com\example\demo\dbflute\allcommon\DBFluteBeansJavaConfig.java')
2020-07-13 12:35:23,439 [main] INFO  (Database#info():2846) - }
2020-07-13 12:35:23,447 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldTableClass() {
2020-07-13 12:35:23,478 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-07-13 12:35:23,479 [main] INFO  (Database#info():2846) - public void parseTableClass() {
2020-07-13 12:35:23,479 [main] INFO  (Database#info():2846) -     parse('OAUTH_POKER_USER_INFO');
2020-07-13 12:35:23,622 [main] INFO  (DfSequenceExtractorH2#doGetSequenceMap():52) - ...Loading sequence informations
2020-07-13 12:35:23,626 [main] INFO  (DfSequenceExtractorBase#selectStringList():75) - select * from INFORMATION_SCHEMA.SEQUENCES where SEQUENCE_SCHEMA in ('PUBLIC')
2020-07-13 12:35:23,631 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-07-13 12:35:24,104 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = H2 1.4.199 (2019-03-13)
2020-07-13 12:35:24,104 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = H2 JDBC Driver 1.4.199 (2019-03-13) for JDBC 4.1
2020-07-13 12:35:24,144 [main] INFO  (DfSequenceExtractorH2#doGetSequenceMap():84) - 
[SEQUENCE]
 POKER.PUBLIC.POKER_USER_ID_SEQ1 = POKER.PUBLIC.POKER_USER_ID_SEQ1:{null to null, increment 1}
2020-07-13 12:35:24,277 [main] INFO  (Database#info():2846) -     parse('POKER_USER_INFO');
2020-07-13 12:35:24,457 [main] INFO  (Database#info():2846) -     parse('POSSESSION_MONEY');
2020-07-13 12:35:24,606 [main] INFO  (Database#info():2846) - }
2020-07-13 12:35:24,607 [main] INFO  (Database#info():2846) -  
2020-07-13 12:35:24,727 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-07-13 12:35:24,729 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [UserAp2] by http://localhost:8386/
2020-07-13 12:35:24,766 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-07-13 12:35:24,767 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-07-13 12:35:24,990 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m02s771ms

  DBFLUTE_CLIENT: {poker}
    database  = h2 (H2 1.4.199 (2019-03-13))
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Generate}
2020-07-13 12:35:26,913 [main] INFO  (DfOutsideSqlTestTask#begin():77) - +------------------------------------------+
2020-07-13 12:35:26,921 [main] INFO  (DfOutsideSqlTestTask#begin():78) - |                                          |
2020-07-13 12:35:26,921 [main] INFO  (DfOutsideSqlTestTask#begin():79) - |              OutsideSqlTest              |
2020-07-13 12:35:26,922 [main] INFO  (DfOutsideSqlTestTask#begin():80) - |                                          |
2020-07-13 12:35:26,925 [main] INFO  (DfOutsideSqlTestTask#begin():81) - +------------------------------------------+
2020-07-13 12:35:26,970 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-07-13 12:35:26,971 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-07-13 12:35:26,972 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-07-13 12:35:26,973 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-07-13 12:35:27,050 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: PokerUserInfoBhv_select_money_ranking.sql
2020-07-13 12:35:27,057 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-07-13 12:35:27,530 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = H2 1.4.199 (2019-03-13)
2020-07-13 12:35:27,531 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = H2 JDBC Driver 1.4.199 (2019-03-13) for JDBC 4.1
2020-07-13 12:35:27,588 [main] INFO  (DfOutsideSqlTestTask$1#traceSql():194) - SQL:
/*
 [df:title]
  所持金ランキング取得SQL

 [df:description]
  ポーカーユーザー情報と所持金テーブルをJOINして、
  所持金の多い順・更新日時が新しい順にソート

*/

-- #df:entity#
-- !df:pmb!
-- !!AutoDetect!!

select *
  from POKER_USER_INFO pui
  inner join POSSESSION_MONEY pm on pui.user_id = pm.user_id
 order by pm.possession_money desc, pm.update_date desc
2020-07-13 12:35:27,648 [main] INFO  (DfOutsideSqlTestTask$1#traceResult():199) -  -> success=1 failure=0

2020-07-13 12:35:27,650 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=0 (in 1 files)
2020-07-13 12:35:27,650 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-07-13 12:35:27,866 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m00s994ms

  DBFLUTE_CLIENT: {poker}
    database  = h2 (H2 1.4.199 (2019-03-13))
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$

 {Checked SQL}
  o PokerUserInfoBhv_select_money_ranking.sql

   o: OK (1)
_/_/_/_/_/_/_/_/_/_/ {OutsideSqlTest}
2020-07-13 12:35:29,586 [main] INFO  (DfSql2EntityTask#begin():106) - +------------------------------------------+
2020-07-13 12:35:29,592 [main] INFO  (DfSql2EntityTask#begin():107) - |                                          |
2020-07-13 12:35:29,592 [main] INFO  (DfSql2EntityTask#begin():108) - |                Sql2Entity                |
2020-07-13 12:35:29,593 [main] INFO  (DfSql2EntityTask#begin():109) - |                                          |
2020-07-13 12:35:29,593 [main] INFO  (DfSql2EntityTask#begin():110) - +------------------------------------------+
2020-07-13 12:35:29,641 [main] INFO  (DfDataSourceHandler#prepare():78) - ...Preparing data source:
2020-07-13 12:35:29,642 [main] INFO  (DfDataSourceHandler#prepare():79) -   driver = org.h2.Driver
2020-07-13 12:35:29,643 [main] INFO  (DfDataSourceHandler#prepare():80) -   url    = jdbc:h2:file:../src/main/resources/database/poker
2020-07-13 12:35:29,643 [main] INFO  (DfDataSourceHandler#prepare():81) -   user   = sa
2020-07-13 12:35:29,673 [main] INFO  (DfSql2EntityTask#setupControlTemplate():177) - 
2020-07-13 12:35:29,673 [main] INFO  (DfSql2EntityTask#setupControlTemplate():178) - ...Using Java control: om/ControlSql2EntityJava.vm
2020-07-13 12:35:29,684 [main] INFO  (DTDResolver#resolveEntity():195) - ...Resolving XML by database.dtd in same package
2020-07-13 12:35:29,795 [main] INFO  (DfSqlFileFireMan#fire():68) - ...Firing: PokerUserInfoBhv_select_money_ranking.sql
2020-07-13 12:35:29,802 [main] INFO  (DfDataSourceHandler#createConnection():166) - ...Connecting to database by data source:
2020-07-13 12:35:30,242 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():233) -   product = H2 1.4.199 (2019-03-13)
2020-07-13 12:35:30,243 [main] INFO  (DfDataSourceHandler#setupConnectionMetaInfo():234) -   driver  = H2 JDBC Driver 1.4.199 (2019-03-13) for JDBC 4.1
2020-07-13 12:35:30,252 [main] INFO  (DfOutsideSqlAnalyzer#traceSql():330) - SQL:
/*
 [df:title]
  所持金ランキング取得SQL

 [df:description]
  ポーカーユーザー情報と所持金テーブルをJOINして、
  所持金の多い順・更新日時が新しい順にソート

*/

-- #df:entity#
-- !df:pmb!
-- !!AutoDetect!!

select *
  from POKER_USER_INFO pui
  inner join POSSESSION_MONEY pm on pui.user_id = pm.user_id
 order by pm.possession_money desc, pm.update_date desc
2020-07-13 12:35:30,358 [main] INFO  (DfOutsideSqlAnalyzer#traceResult():336) -  -> success=1 failure=0
2020-07-13 12:35:30,359 [main] INFO  (DfSqlFileFireMan#fire():93) - Fired SQL: success=1, failure=0 (in 1 files)
2020-07-13 12:35:30,425 [main] INFO  (DfSql2EntityTask#initControlContext():311) - 
2020-07-13 12:35:30,426 [main] INFO  (DfSql2EntityTask#initControlContext():312) - ...Preparing generation of customize-entities and parameter-beans
2020-07-13 12:35:30,426 [main] INFO  (DfSql2EntityTask#initControlContext():313) - * * * * * * * * * *
2020-07-13 12:35:30,427 [main] INFO  (DfSql2EntityTask#initControlContext():314) - * CustomizeEntity *
2020-07-13 12:35:30,427 [main] INFO  (DfSql2EntityTask#initControlContext():315) - * * * * * * * * * *
2020-07-13 12:35:30,445 [main] INFO  (DfSql2EntityTask#showCustomizeEntity():927) - 
Select
  USER_ID INTEGER(10) related to POSSESSION_MONEY.USER_ID
  USER_NAME VARCHAR(255) related to POKER_USER_INFO.USER_NAME
  PASSWORD VARCHAR(255) related to POKER_USER_INFO.PASSWORD
  LOGIN_DATE TIMESTAMP(26, 6) related to POKER_USER_INFO.LOGIN_DATE
  POSSESSION_MONEY DECIMAL(65535, 32767) related to POSSESSION_MONEY.POSSESSION_MONEY
  UPDATE_DATE TIMESTAMP(26, 6) related to POSSESSION_MONEY.UPDATE_DATE
2020-07-13 12:35:30,449 [main] INFO  (DfSql2EntityTask#showParameterBean():932) - * * * * * * * * *
2020-07-13 12:35:30,449 [main] INFO  (DfSql2EntityTask#showParameterBean():933) - * ParameterBean *
2020-07-13 12:35:30,450 [main] INFO  (DfSql2EntityTask#showParameterBean():934) - * * * * * * * * *
2020-07-13 12:35:30,452 [main] INFO  (DfSql2EntityTask#showParameterBean():976) - 
SelectPmb (typed to list, entity)
2020-07-13 12:35:30,462 [main] INFO  (DfAbstractTexenTask#fireVelocityProcess():253) - generator.parse("om/ControlSql2EntityJava.vm", ctx);
2020-07-13 12:35:30,702 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=poker
2020-07-13 12:35:30,703 [main] INFO  (DfClassificationProperties#initializeClassificationDeployment():1085) - ...Initializing ClassificationDeployment: project=poker
2020-07-13 12:35:30,709 [main] INFO  (Database#doEnableSql2EntityOutputDirectory():1226) - ...Setting up sql2EntityOutputDirectory: ../src/main/java
2020-07-13 12:35:30,712 [main] INFO  (DfOldClassHandler#info():1045) - public void deleteOldCustomizeClass() {
2020-07-13 12:35:30,729 [main] INFO  (DfOldClassHandler#info():1045) - }
2020-07-13 12:35:30,729 [main] INFO  (Database#info():2846) - public void parseCustomizeEntity() {
2020-07-13 12:35:30,842 [main] INFO  (Database#info():2846) -     parse('Select')
2020-07-13 12:35:30,845 [main] INFO  (Database#info():2846) - }
2020-07-13 12:35:30,846 [main] INFO  (Database#info():2846) - public void parseParameterBean() {
2020-07-13 12:35:30,858 [main] INFO  (Database#info():2846) -     parse('SelectPmb');
2020-07-13 12:35:30,884 [main] INFO  (Database#info():2846) - }
2020-07-13 12:35:30,966 [main] INFO  (DfSql2EntityTask#showTargetSqlFileInformation():303) - 
/- - - - - - - - - - - - - - - - - - - - - - - -
Target SQL files: 1

  PokerUserInfoBhv_select_money_ranking.sql
- - - - - - - - - -/
2020-07-13 12:35:30,986 [main] INFO  (DfRefreshResourceProcess#show():295) - /===========================================================================
2020-07-13 12:35:30,994 [main] INFO  (DfRefreshResourceProcess#show():295) - ...Refreshing [UserAp2] by http://localhost:8386/
2020-07-13 12:35:31,019 [main] INFO  (DfRefreshResourceProcess#show():295) - ==========/
2020-07-13 12:35:31,020 [main] INFO  (DfDataSourceHandler#destroy():120) - ...closeReally()
2020-07-13 12:35:31,239 [main] INFO  (DfDBFluteTaskUtil#logFinalMessage():139) - 
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
[Final Message]: 00m01s682ms

  DBFLUTE_CLIENT: {poker}
    database  = h2 (H2 1.4.199 (2019-03-13))
    language  = java
    container = spring
    package   = com.example.demo.dbflute

  DBFLUTE_ENVIRONMENT_TYPE: {}
    driver = org.h2.Driver
    url    = jdbc:h2:file:../src/main/resources/database/poker
    schema = {POKER.PUBLIC as main}
    user   = sa
    props  = {}
    additionalSchema = 
    repsEnvType      = ut
    refreshProject   = $$AutoDetect$$
_/_/_/_/_/_/_/_/_/_/ {Sql2Entity}
